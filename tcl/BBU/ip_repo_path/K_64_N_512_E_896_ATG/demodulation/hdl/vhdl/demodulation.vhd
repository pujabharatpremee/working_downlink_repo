-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity demodulation is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    demod_out_TREADY : IN STD_LOGIC;
    real_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    real_in_TVALID : IN STD_LOGIC;
    real_in_TREADY : OUT STD_LOGIC;
    real_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    imag_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    imag_in_TVALID : IN STD_LOGIC;
    imag_in_TREADY : OUT STD_LOGIC;
    imag_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    demod_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    demod_out_TVALID : OUT STD_LOGIC;
    demod_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of demodulation is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "demodulation,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu21dr-ffvd1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.033000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=824,HLS_SYN_LUT=1190,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv16_2D41 : STD_LOGIC_VECTOR (15 downto 0) := "0010110101000001";
    constant ap_const_lv16_D2BF : STD_LOGIC_VECTOR (15 downto 0) := "1101001010111111";
    constant ap_const_lv16_817F : STD_LOGIC_VECTOR (15 downto 0) := "1000000101111111";
    constant ap_const_lv16_8181 : STD_LOGIC_VECTOR (15 downto 0) := "1000000110000001";
    constant ap_const_lv16_7F81 : STD_LOGIC_VECTOR (15 downto 0) := "0111111110000001";
    constant ap_const_lv16_7F7F : STD_LOGIC_VECTOR (15 downto 0) := "0111111101111111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal real_in_V_data_V_0_vld_out : STD_LOGIC;
    signal imag_in_V_data_V_0_vld_out : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal demod_out_V_data_V_1_ack_in : STD_LOGIC;
    signal demod_out_V_last_V_1_ack_in : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal real_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal real_in_V_data_V_0_vld_in : STD_LOGIC;
    signal real_in_V_data_V_0_ack_in : STD_LOGIC;
    signal real_in_V_data_V_0_ack_out : STD_LOGIC;
    signal real_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal real_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal real_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal real_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal real_in_V_data_V_0_sel : STD_LOGIC;
    signal real_in_V_data_V_0_load_A : STD_LOGIC;
    signal real_in_V_data_V_0_load_B : STD_LOGIC;
    signal real_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal real_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal real_in_V_last_V_0_vld_in : STD_LOGIC;
    signal real_in_V_last_V_0_ack_out : STD_LOGIC;
    signal real_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal imag_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal imag_in_V_data_V_0_vld_in : STD_LOGIC;
    signal imag_in_V_data_V_0_ack_in : STD_LOGIC;
    signal imag_in_V_data_V_0_ack_out : STD_LOGIC;
    signal imag_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal imag_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal imag_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal imag_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal imag_in_V_data_V_0_sel : STD_LOGIC;
    signal imag_in_V_data_V_0_load_A : STD_LOGIC;
    signal imag_in_V_data_V_0_load_B : STD_LOGIC;
    signal imag_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal imag_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal imag_in_V_last_V_0_vld_in : STD_LOGIC;
    signal imag_in_V_last_V_0_ack_out : STD_LOGIC;
    signal imag_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_out_V_data_V_1_vld_in : STD_LOGIC;
    signal demod_out_V_data_V_1_vld_out : STD_LOGIC;
    signal demod_out_V_data_V_1_ack_out : STD_LOGIC;
    signal demod_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal demod_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal demod_out_V_data_V_1_sel : STD_LOGIC;
    signal demod_out_V_data_V_1_load_A : STD_LOGIC;
    signal demod_out_V_data_V_1_load_B : STD_LOGIC;
    signal demod_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal demod_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_out_V_last_V_1_vld_in : STD_LOGIC;
    signal demod_out_V_last_V_1_vld_out : STD_LOGIC;
    signal demod_out_V_last_V_1_ack_out : STD_LOGIC;
    signal demod_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal demod_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal demod_out_V_last_V_1_sel : STD_LOGIC;
    signal demod_out_V_last_V_1_load_A : STD_LOGIC;
    signal demod_out_V_last_V_1_load_B : STD_LOGIC;
    signal demod_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal soft_txn : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    signal real_in_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal imag_in_TDATA_blk_n : STD_LOGIC;
    signal demod_out_TDATA_blk_n : STD_LOGIC;
    signal tmp_data_V_fu_942_p9 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_1_fu_980_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_3_fu_122_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_126_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_324_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel39_cast_cast_fu_338_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_1_fu_130_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_1_fu_140_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_1_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_1_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_1_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_1_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_1_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel45_cast_cast_fu_422_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_2_fu_150_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_2_fu_160_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_2_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_2_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_2_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_2_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_2_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_2_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_492_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel51_cast_cast_fu_506_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_3_fu_170_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_3_fu_180_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_3_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_3_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_3_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_3_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_3_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_3_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel6_fu_576_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel57_cast_cast_fu_590_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_4_fu_190_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_4_fu_200_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_4_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_4_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_4_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_4_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_4_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_4_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel8_fu_660_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel63_cast_cast_fu_674_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_5_fu_210_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_5_fu_220_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_5_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_5_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_5_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_5_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_5_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_5_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel10_fu_744_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel69_cast_cast_fu_758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_6_fu_230_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_6_fu_240_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_6_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_6_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_6_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_6_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_6_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_6_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel12_fu_828_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel75_cast_cast_fu_842_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_7_fu_250_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_7_fu_260_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_7_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_7_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_7_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_7_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_7_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_7_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel14_fu_912_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel81_cast_cast_fu_926_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel15_fu_934_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel13_fu_850_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel11_fu_766_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel9_fu_682_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel7_fu_598_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel5_fu_514_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel3_fu_430_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel1_fu_346_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal soft_txn_load_op_fu_974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((demod_out_V_data_V_1_ack_out = ap_const_logic_1) and (demod_out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        demod_out_V_data_V_1_sel_rd <= not(demod_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((demod_out_V_data_V_1_ack_in = ap_const_logic_1) and (demod_out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        demod_out_V_data_V_1_sel_wr <= not(demod_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((demod_out_V_data_V_1_state = ap_const_lv2_2) and (demod_out_V_data_V_1_vld_in = ap_const_logic_0)) or ((demod_out_V_data_V_1_state = ap_const_lv2_3) and (demod_out_V_data_V_1_vld_in = ap_const_logic_0) and (demod_out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    demod_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((demod_out_V_data_V_1_state = ap_const_lv2_1) and (demod_out_V_data_V_1_ack_out = ap_const_logic_0)) or ((demod_out_V_data_V_1_state = ap_const_lv2_3) and (demod_out_V_data_V_1_ack_out = ap_const_logic_0) and (demod_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((demod_out_V_data_V_1_vld_in = ap_const_logic_0) and (demod_out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((demod_out_V_data_V_1_ack_out = ap_const_logic_0) and (demod_out_V_data_V_1_vld_in = ap_const_logic_1))) and (demod_out_V_data_V_1_state = ap_const_lv2_3)) or ((demod_out_V_data_V_1_state = ap_const_lv2_1) and (demod_out_V_data_V_1_ack_out = ap_const_logic_1)) or ((demod_out_V_data_V_1_state = ap_const_lv2_2) and (demod_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    demod_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((demod_out_V_last_V_1_ack_out = ap_const_logic_1) and (demod_out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        demod_out_V_last_V_1_sel_rd <= not(demod_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((demod_out_V_last_V_1_ack_in = ap_const_logic_1) and (demod_out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        demod_out_V_last_V_1_sel_wr <= not(demod_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    demod_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((demod_out_V_last_V_1_state = ap_const_lv2_2) and (demod_out_V_last_V_1_vld_in = ap_const_logic_0)) or ((demod_out_V_last_V_1_state = ap_const_lv2_3) and (demod_out_V_last_V_1_vld_in = ap_const_logic_0) and (demod_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    demod_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((demod_out_V_last_V_1_state = ap_const_lv2_1) and (demod_out_V_last_V_1_ack_out = ap_const_logic_0)) or ((demod_out_V_last_V_1_state = ap_const_lv2_3) and (demod_out_V_last_V_1_ack_out = ap_const_logic_0) and (demod_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((demod_out_V_last_V_1_vld_in = ap_const_logic_0) and (demod_out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((demod_out_V_last_V_1_ack_out = ap_const_logic_0) and (demod_out_V_last_V_1_vld_in = ap_const_logic_1))) and (demod_out_V_last_V_1_state = ap_const_lv2_3)) or ((demod_out_V_last_V_1_state = ap_const_lv2_1) and (demod_out_V_last_V_1_ack_out = ap_const_logic_1)) or ((demod_out_V_last_V_1_state = ap_const_lv2_2) and (demod_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    demod_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    imag_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                imag_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((imag_in_V_data_V_0_vld_out = ap_const_logic_1) and (imag_in_V_data_V_0_ack_out = ap_const_logic_1))) then 
                                        imag_in_V_data_V_0_sel_rd <= not(imag_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    imag_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                imag_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((imag_in_V_data_V_0_ack_in = ap_const_logic_1) and (imag_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        imag_in_V_data_V_0_sel_wr <= not(imag_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    imag_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                imag_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((imag_in_V_data_V_0_state = ap_const_lv2_2) and (imag_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((imag_in_V_data_V_0_state = ap_const_lv2_3) and (imag_in_V_data_V_0_vld_in = ap_const_logic_0) and (imag_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    imag_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((imag_in_V_data_V_0_state = ap_const_lv2_1) and (imag_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((imag_in_V_data_V_0_state = ap_const_lv2_3) and (imag_in_V_data_V_0_ack_out = ap_const_logic_0) and (imag_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    imag_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((imag_in_V_data_V_0_vld_in = ap_const_logic_0) and (imag_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((imag_in_V_data_V_0_ack_out = ap_const_logic_0) and (imag_in_V_data_V_0_vld_in = ap_const_logic_1))) and (imag_in_V_data_V_0_state = ap_const_lv2_3)) or ((imag_in_V_data_V_0_state = ap_const_lv2_1) and (imag_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((imag_in_V_data_V_0_state = ap_const_lv2_2) and (imag_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    imag_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    imag_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    imag_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                imag_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((imag_in_V_last_V_0_state = ap_const_lv2_2) and (imag_in_V_last_V_0_vld_in = ap_const_logic_0)) or ((imag_in_V_last_V_0_state = ap_const_lv2_3) and (imag_in_V_last_V_0_vld_in = ap_const_logic_0) and (imag_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    imag_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((imag_in_V_last_V_0_state = ap_const_lv2_1) and (imag_in_V_last_V_0_ack_out = ap_const_logic_0)) or ((imag_in_V_last_V_0_state = ap_const_lv2_3) and (imag_in_V_last_V_0_ack_out = ap_const_logic_0) and (imag_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    imag_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((imag_in_V_last_V_0_vld_in = ap_const_logic_0) and (imag_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((imag_in_V_last_V_0_ack_out = ap_const_logic_0) and (imag_in_V_last_V_0_vld_in = ap_const_logic_1))) and (imag_in_V_last_V_0_state = ap_const_lv2_3)) or ((imag_in_V_last_V_0_state = ap_const_lv2_1) and (imag_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((imag_in_V_last_V_0_state = ap_const_lv2_2) and (imag_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    imag_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    imag_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    real_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                real_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((real_in_V_data_V_0_ack_out = ap_const_logic_1) and (real_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        real_in_V_data_V_0_sel_rd <= not(real_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    real_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                real_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((real_in_V_data_V_0_ack_in = ap_const_logic_1) and (real_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        real_in_V_data_V_0_sel_wr <= not(real_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    real_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                real_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((real_in_V_data_V_0_state = ap_const_lv2_2) and (real_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((real_in_V_data_V_0_state = ap_const_lv2_3) and (real_in_V_data_V_0_vld_in = ap_const_logic_0) and (real_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    real_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((real_in_V_data_V_0_state = ap_const_lv2_1) and (real_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((real_in_V_data_V_0_state = ap_const_lv2_3) and (real_in_V_data_V_0_ack_out = ap_const_logic_0) and (real_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    real_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((real_in_V_data_V_0_ack_out = ap_const_logic_0) and (real_in_V_data_V_0_vld_in = ap_const_logic_1))) and not(((real_in_V_data_V_0_vld_in = ap_const_logic_0) and (real_in_V_data_V_0_ack_out = ap_const_logic_1))) and (real_in_V_data_V_0_state = ap_const_lv2_3)) or ((real_in_V_data_V_0_state = ap_const_lv2_1) and (real_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((real_in_V_data_V_0_state = ap_const_lv2_2) and (real_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    real_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    real_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    real_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                real_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((real_in_V_last_V_0_state = ap_const_lv2_2) and (real_in_V_last_V_0_vld_in = ap_const_logic_0)) or ((real_in_V_last_V_0_state = ap_const_lv2_3) and (real_in_V_last_V_0_vld_in = ap_const_logic_0) and (real_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    real_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((real_in_V_last_V_0_state = ap_const_lv2_1) and (real_in_V_last_V_0_ack_out = ap_const_logic_0)) or ((real_in_V_last_V_0_state = ap_const_lv2_3) and (real_in_V_last_V_0_ack_out = ap_const_logic_0) and (real_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    real_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((real_in_V_last_V_0_vld_in = ap_const_logic_0) and (real_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((real_in_V_last_V_0_ack_out = ap_const_logic_0) and (real_in_V_last_V_0_vld_in = ap_const_logic_1))) and (real_in_V_last_V_0_state = ap_const_lv2_3)) or ((real_in_V_last_V_0_state = ap_const_lv2_1) and (real_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((real_in_V_last_V_0_state = ap_const_lv2_2) and (real_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    real_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    real_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_out_V_data_V_1_load_A = ap_const_logic_1)) then
                demod_out_V_data_V_1_payload_A <= tmp_data_V_fu_942_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_out_V_data_V_1_load_B = ap_const_logic_1)) then
                demod_out_V_data_V_1_payload_B <= tmp_data_V_fu_942_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_out_V_last_V_1_load_A = ap_const_logic_1)) then
                demod_out_V_last_V_1_payload_A <= tmp_last_V_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_out_V_last_V_1_load_B = ap_const_logic_1)) then
                demod_out_V_last_V_1_payload_B <= tmp_last_V_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((imag_in_V_data_V_0_load_A = ap_const_logic_1)) then
                imag_in_V_data_V_0_payload_A <= imag_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((imag_in_V_data_V_0_load_B = ap_const_logic_1)) then
                imag_in_V_data_V_0_payload_B <= imag_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((real_in_V_data_V_0_load_A = ap_const_logic_1)) then
                real_in_V_data_V_0_payload_A <= real_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((real_in_V_data_V_0_load_B = ap_const_logic_1)) then
                real_in_V_data_V_0_payload_B <= real_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                soft_txn <= tmp_1_fu_980_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, real_in_V_data_V_0_vld_out, imag_in_V_data_V_0_vld_out, demod_out_V_data_V_1_ack_in, demod_out_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_out_V_last_V_1_ack_in = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (imag_in_V_data_V_0_vld_out = ap_const_logic_0) or (real_in_V_data_V_0_vld_out = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, real_in_V_data_V_0_vld_out, imag_in_V_data_V_0_vld_out, demod_out_V_data_V_1_ack_in, demod_out_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_out_V_last_V_1_ack_in = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0) or (imag_in_V_data_V_0_vld_out = ap_const_logic_0) or (real_in_V_data_V_0_vld_out = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, real_in_V_data_V_0_vld_out, imag_in_V_data_V_0_vld_out, demod_out_V_data_V_1_ack_in, demod_out_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_out_V_last_V_1_ack_in = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0) or (imag_in_V_data_V_0_vld_out = ap_const_logic_0) or (real_in_V_data_V_0_vld_out = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, real_in_V_data_V_0_vld_out, imag_in_V_data_V_0_vld_out)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (imag_in_V_data_V_0_vld_out = ap_const_logic_0) or (real_in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(demod_out_V_data_V_1_ack_in, demod_out_V_last_V_1_ack_in)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((demod_out_V_last_V_1_ack_in = ap_const_logic_0) or (demod_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    demod_out_TDATA <= demod_out_V_data_V_1_data_out;

    demod_out_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, demod_out_V_data_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            demod_out_TDATA_blk_n <= demod_out_V_data_V_1_state(1);
        else 
            demod_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    demod_out_TLAST <= demod_out_V_last_V_1_data_out;
    demod_out_TVALID <= demod_out_V_last_V_1_state(0);
    demod_out_V_data_V_1_ack_in <= demod_out_V_data_V_1_state(1);
    demod_out_V_data_V_1_ack_out <= demod_out_TREADY;

    demod_out_V_data_V_1_data_out_assign_proc : process(demod_out_V_data_V_1_payload_A, demod_out_V_data_V_1_payload_B, demod_out_V_data_V_1_sel)
    begin
        if ((demod_out_V_data_V_1_sel = ap_const_logic_1)) then 
            demod_out_V_data_V_1_data_out <= demod_out_V_data_V_1_payload_B;
        else 
            demod_out_V_data_V_1_data_out <= demod_out_V_data_V_1_payload_A;
        end if; 
    end process;

    demod_out_V_data_V_1_load_A <= (not(demod_out_V_data_V_1_sel_wr) and demod_out_V_data_V_1_state_cmp_full);
    demod_out_V_data_V_1_load_B <= (demod_out_V_data_V_1_state_cmp_full and demod_out_V_data_V_1_sel_wr);
    demod_out_V_data_V_1_sel <= demod_out_V_data_V_1_sel_rd;
    demod_out_V_data_V_1_state_cmp_full <= '0' when (demod_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    demod_out_V_data_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            demod_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            demod_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    demod_out_V_data_V_1_vld_out <= demod_out_V_data_V_1_state(0);
    demod_out_V_last_V_1_ack_in <= demod_out_V_last_V_1_state(1);
    demod_out_V_last_V_1_ack_out <= demod_out_TREADY;

    demod_out_V_last_V_1_data_out_assign_proc : process(demod_out_V_last_V_1_payload_A, demod_out_V_last_V_1_payload_B, demod_out_V_last_V_1_sel)
    begin
        if ((demod_out_V_last_V_1_sel = ap_const_logic_1)) then 
            demod_out_V_last_V_1_data_out <= demod_out_V_last_V_1_payload_B;
        else 
            demod_out_V_last_V_1_data_out <= demod_out_V_last_V_1_payload_A;
        end if; 
    end process;

    demod_out_V_last_V_1_load_A <= (not(demod_out_V_last_V_1_sel_wr) and demod_out_V_last_V_1_state_cmp_full);
    demod_out_V_last_V_1_load_B <= (demod_out_V_last_V_1_state_cmp_full and demod_out_V_last_V_1_sel_wr);
    demod_out_V_last_V_1_sel <= demod_out_V_last_V_1_sel_rd;
    demod_out_V_last_V_1_state_cmp_full <= '0' when (demod_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    demod_out_V_last_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            demod_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            demod_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    demod_out_V_last_V_1_vld_out <= demod_out_V_last_V_1_state(0);

    imag_in_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, imag_in_V_data_V_0_state, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imag_in_TDATA_blk_n <= imag_in_V_data_V_0_state(0);
        else 
            imag_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imag_in_TREADY <= imag_in_V_last_V_0_state(1);
    imag_in_V_data_V_0_ack_in <= imag_in_V_data_V_0_state(1);

    imag_in_V_data_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imag_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            imag_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    imag_in_V_data_V_0_data_out_assign_proc : process(imag_in_V_data_V_0_payload_A, imag_in_V_data_V_0_payload_B, imag_in_V_data_V_0_sel)
    begin
        if ((imag_in_V_data_V_0_sel = ap_const_logic_1)) then 
            imag_in_V_data_V_0_data_out <= imag_in_V_data_V_0_payload_B;
        else 
            imag_in_V_data_V_0_data_out <= imag_in_V_data_V_0_payload_A;
        end if; 
    end process;

    imag_in_V_data_V_0_load_A <= (imag_in_V_data_V_0_state_cmp_full and not(imag_in_V_data_V_0_sel_wr));
    imag_in_V_data_V_0_load_B <= (imag_in_V_data_V_0_state_cmp_full and imag_in_V_data_V_0_sel_wr);
    imag_in_V_data_V_0_sel <= imag_in_V_data_V_0_sel_rd;
    imag_in_V_data_V_0_state_cmp_full <= '0' when (imag_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    imag_in_V_data_V_0_vld_in <= imag_in_TVALID;
    imag_in_V_data_V_0_vld_out <= imag_in_V_data_V_0_state(0);

    imag_in_V_last_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imag_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            imag_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    imag_in_V_last_V_0_vld_in <= imag_in_TVALID;
    newSel10_fu_744_p3 <= 
        ap_const_lv16_817F when (sel_tmp11_fu_738_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel11_fu_766_p3 <= 
        newSel10_fu_744_p3 when (or_cond5_fu_752_p2(0) = '1') else 
        newSel69_cast_cast_fu_758_p3;
    newSel12_fu_828_p3 <= 
        ap_const_lv16_817F when (sel_tmp13_fu_822_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel13_fu_850_p3 <= 
        newSel12_fu_828_p3 when (or_cond6_fu_836_p2(0) = '1') else 
        newSel75_cast_cast_fu_842_p3;
    newSel14_fu_912_p3 <= 
        ap_const_lv16_817F when (sel_tmp15_fu_906_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel15_fu_934_p3 <= 
        newSel14_fu_912_p3 when (or_cond7_fu_920_p2(0) = '1') else 
        newSel81_cast_cast_fu_926_p3;
    newSel1_fu_346_p3 <= 
        newSel_fu_324_p3 when (or_cond_fu_332_p2(0) = '1') else 
        newSel39_cast_cast_fu_338_p3;
    newSel2_fu_408_p3 <= 
        ap_const_lv16_817F when (sel_tmp6_fu_402_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel39_cast_cast_fu_338_p3 <= 
        ap_const_lv16_7F81 when (tmp_2_fu_300_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel3_fu_430_p3 <= 
        newSel2_fu_408_p3 when (or_cond1_fu_416_p2(0) = '1') else 
        newSel45_cast_cast_fu_422_p3;
    newSel45_cast_cast_fu_422_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_1_fu_384_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel4_fu_492_p3 <= 
        ap_const_lv16_817F when (sel_tmp_fu_486_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel51_cast_cast_fu_506_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_2_fu_468_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel57_cast_cast_fu_590_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_3_fu_552_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel5_fu_514_p3 <= 
        newSel4_fu_492_p3 when (or_cond2_fu_500_p2(0) = '1') else 
        newSel51_cast_cast_fu_506_p3;
    newSel63_cast_cast_fu_674_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_4_fu_636_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel69_cast_cast_fu_758_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_5_fu_720_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel6_fu_576_p3 <= 
        ap_const_lv16_817F when (sel_tmp4_fu_570_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel75_cast_cast_fu_842_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_6_fu_804_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel7_fu_598_p3 <= 
        newSel6_fu_576_p3 when (or_cond3_fu_584_p2(0) = '1') else 
        newSel57_cast_cast_fu_590_p3;
    newSel81_cast_cast_fu_926_p3 <= 
        ap_const_lv16_7F81 when (tmp_10_7_fu_888_p2(0) = '1') else 
        ap_const_lv16_7F7F;
    newSel8_fu_660_p3 <= 
        ap_const_lv16_817F when (sel_tmp8_fu_654_p2(0) = '1') else 
        ap_const_lv16_8181;
    newSel9_fu_682_p3 <= 
        newSel8_fu_660_p3 when (or_cond4_fu_668_p2(0) = '1') else 
        newSel63_cast_cast_fu_674_p3;
    newSel_fu_324_p3 <= 
        ap_const_lv16_817F when (sel_tmp2_fu_318_p2(0) = '1') else 
        ap_const_lv16_8181;
    or_cond1_fu_416_p2 <= (tmp_8_1_fu_366_p2 or sel_tmp6_fu_402_p2);
    or_cond2_fu_500_p2 <= (tmp_8_2_fu_450_p2 or sel_tmp_fu_486_p2);
    or_cond3_fu_584_p2 <= (tmp_8_3_fu_534_p2 or sel_tmp4_fu_570_p2);
    or_cond4_fu_668_p2 <= (tmp_8_4_fu_618_p2 or sel_tmp8_fu_654_p2);
    or_cond5_fu_752_p2 <= (tmp_8_5_fu_702_p2 or sel_tmp11_fu_738_p2);
    or_cond6_fu_836_p2 <= (tmp_8_6_fu_786_p2 or sel_tmp13_fu_822_p2);
    or_cond7_fu_920_p2 <= (tmp_8_7_fu_870_p2 or sel_tmp15_fu_906_p2);
    or_cond_fu_332_p2 <= (tmp_8_fu_282_p2 or sel_tmp2_fu_318_p2);
    p_Result_22_1_fu_130_p4 <= real_in_V_data_V_0_data_out(31 downto 16);
    p_Result_22_2_fu_150_p4 <= real_in_V_data_V_0_data_out(47 downto 32);
    p_Result_22_3_fu_170_p4 <= real_in_V_data_V_0_data_out(63 downto 48);
    p_Result_22_4_fu_190_p4 <= real_in_V_data_V_0_data_out(79 downto 64);
    p_Result_22_5_fu_210_p4 <= real_in_V_data_V_0_data_out(95 downto 80);
    p_Result_22_6_fu_230_p4 <= real_in_V_data_V_0_data_out(111 downto 96);
    p_Result_22_7_fu_250_p4 <= real_in_V_data_V_0_data_out(127 downto 112);
    p_Result_23_1_fu_140_p4 <= imag_in_V_data_V_0_data_out(31 downto 16);
    p_Result_23_2_fu_160_p4 <= imag_in_V_data_V_0_data_out(47 downto 32);
    p_Result_23_3_fu_180_p4 <= imag_in_V_data_V_0_data_out(63 downto 48);
    p_Result_23_4_fu_200_p4 <= imag_in_V_data_V_0_data_out(79 downto 64);
    p_Result_23_5_fu_220_p4 <= imag_in_V_data_V_0_data_out(95 downto 80);
    p_Result_23_6_fu_240_p4 <= imag_in_V_data_V_0_data_out(111 downto 96);
    p_Result_23_7_fu_260_p4 <= imag_in_V_data_V_0_data_out(127 downto 112);

    real_in_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, real_in_V_data_V_0_state, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            real_in_TDATA_blk_n <= real_in_V_data_V_0_state(0);
        else 
            real_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_in_TREADY <= real_in_V_last_V_0_state(1);
    real_in_V_data_V_0_ack_in <= real_in_V_data_V_0_state(1);

    real_in_V_data_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            real_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            real_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    real_in_V_data_V_0_data_out_assign_proc : process(real_in_V_data_V_0_payload_A, real_in_V_data_V_0_payload_B, real_in_V_data_V_0_sel)
    begin
        if ((real_in_V_data_V_0_sel = ap_const_logic_1)) then 
            real_in_V_data_V_0_data_out <= real_in_V_data_V_0_payload_B;
        else 
            real_in_V_data_V_0_data_out <= real_in_V_data_V_0_payload_A;
        end if; 
    end process;

    real_in_V_data_V_0_load_A <= (real_in_V_data_V_0_state_cmp_full and not(real_in_V_data_V_0_sel_wr));
    real_in_V_data_V_0_load_B <= (real_in_V_data_V_0_state_cmp_full and real_in_V_data_V_0_sel_wr);
    real_in_V_data_V_0_sel <= real_in_V_data_V_0_sel_rd;
    real_in_V_data_V_0_state_cmp_full <= '0' when (real_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    real_in_V_data_V_0_vld_in <= real_in_TVALID;
    real_in_V_data_V_0_vld_out <= real_in_V_data_V_0_state(0);

    real_in_V_last_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            real_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            real_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    real_in_V_last_V_0_vld_in <= real_in_TVALID;
    sel_tmp10_fu_726_p2 <= (tmp_8_5_fu_702_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_738_p2 <= (tmp_6_5_fu_690_p2 and tmp5_fu_732_p2);
    sel_tmp12_fu_810_p2 <= (tmp_8_6_fu_786_p2 xor ap_const_lv1_1);
    sel_tmp13_fu_822_p2 <= (tmp_6_6_fu_774_p2 and tmp6_fu_816_p2);
    sel_tmp14_fu_894_p2 <= (tmp_8_7_fu_870_p2 xor ap_const_lv1_1);
    sel_tmp15_fu_906_p2 <= (tmp_6_7_fu_858_p2 and tmp7_fu_900_p2);
    sel_tmp1_fu_306_p2 <= (tmp_8_fu_282_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_318_p2 <= (tmp_fu_312_p2 and tmp_6_fu_270_p2);
    sel_tmp3_fu_558_p2 <= (tmp_8_3_fu_534_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_570_p2 <= (tmp_6_3_fu_522_p2 and tmp3_fu_564_p2);
    sel_tmp5_fu_390_p2 <= (tmp_8_1_fu_366_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_402_p2 <= (tmp_6_1_fu_354_p2 and tmp1_fu_396_p2);
    sel_tmp7_fu_642_p2 <= (tmp_8_4_fu_618_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_654_p2 <= (tmp_6_4_fu_606_p2 and tmp4_fu_648_p2);
    sel_tmp9_fu_474_p2 <= (tmp_8_2_fu_450_p2 xor ap_const_lv1_1);
    sel_tmp_fu_486_p2 <= (tmp_6_2_fu_438_p2 and tmp2_fu_480_p2);
    soft_txn_load_op_fu_974_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(soft_txn));
    tmp1_fu_396_p2 <= (tmp_9_1_fu_372_p2 and sel_tmp5_fu_390_p2);
    tmp2_fu_480_p2 <= (tmp_9_2_fu_456_p2 and sel_tmp9_fu_474_p2);
    tmp3_fu_564_p2 <= (tmp_9_3_fu_540_p2 and sel_tmp3_fu_558_p2);
    tmp4_fu_648_p2 <= (tmp_9_4_fu_624_p2 and sel_tmp7_fu_642_p2);
    tmp5_fu_732_p2 <= (tmp_9_5_fu_708_p2 and sel_tmp10_fu_726_p2);
    tmp6_fu_816_p2 <= (tmp_9_6_fu_792_p2 and sel_tmp12_fu_810_p2);
    tmp7_fu_900_p2 <= (tmp_9_7_fu_876_p2 and sel_tmp14_fu_894_p2);
    tmp_10_1_fu_384_p2 <= (tmp_7_1_fu_360_p2 and tmp_4_1_fu_378_p2);
    tmp_10_2_fu_468_p2 <= (tmp_7_2_fu_444_p2 and tmp_4_2_fu_462_p2);
    tmp_10_3_fu_552_p2 <= (tmp_7_3_fu_528_p2 and tmp_4_3_fu_546_p2);
    tmp_10_4_fu_636_p2 <= (tmp_7_4_fu_612_p2 and tmp_4_4_fu_630_p2);
    tmp_10_5_fu_720_p2 <= (tmp_7_5_fu_696_p2 and tmp_4_5_fu_714_p2);
    tmp_10_6_fu_804_p2 <= (tmp_7_6_fu_780_p2 and tmp_4_6_fu_798_p2);
    tmp_10_7_fu_888_p2 <= (tmp_7_7_fu_864_p2 and tmp_4_7_fu_882_p2);
    tmp_1_fu_980_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_fu_967_p2(0) = '1') else 
        soft_txn_load_op_fu_974_p2;
    tmp_2_fu_300_p2 <= (tmp_7_fu_276_p2 and tmp_4_fu_294_p2);
    tmp_3_fu_122_p1 <= real_in_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_4_1_fu_378_p2 <= "1" when (p_Result_22_1_fu_130_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_2_fu_462_p2 <= "1" when (p_Result_22_2_fu_150_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_3_fu_546_p2 <= "1" when (p_Result_22_3_fu_170_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_4_fu_630_p2 <= "1" when (p_Result_22_4_fu_190_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_5_fu_714_p2 <= "1" when (p_Result_22_5_fu_210_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_6_fu_798_p2 <= "1" when (p_Result_22_6_fu_230_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_7_fu_882_p2 <= "1" when (p_Result_22_7_fu_250_p4 = ap_const_lv16_D2BF) else "0";
    tmp_4_fu_294_p2 <= "1" when (tmp_3_fu_122_p1 = ap_const_lv16_D2BF) else "0";
    tmp_5_fu_126_p1 <= imag_in_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_6_1_fu_354_p2 <= "1" when (p_Result_22_1_fu_130_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_2_fu_438_p2 <= "1" when (p_Result_22_2_fu_150_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_3_fu_522_p2 <= "1" when (p_Result_22_3_fu_170_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_4_fu_606_p2 <= "1" when (p_Result_22_4_fu_190_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_5_fu_690_p2 <= "1" when (p_Result_22_5_fu_210_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_6_fu_774_p2 <= "1" when (p_Result_22_6_fu_230_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_7_fu_858_p2 <= "1" when (p_Result_22_7_fu_250_p4 = ap_const_lv16_2D41) else "0";
    tmp_6_fu_270_p2 <= "1" when (tmp_3_fu_122_p1 = ap_const_lv16_2D41) else "0";
    tmp_7_1_fu_360_p2 <= "1" when (p_Result_23_1_fu_140_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_2_fu_444_p2 <= "1" when (p_Result_23_2_fu_160_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_3_fu_528_p2 <= "1" when (p_Result_23_3_fu_180_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_4_fu_612_p2 <= "1" when (p_Result_23_4_fu_200_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_5_fu_696_p2 <= "1" when (p_Result_23_5_fu_220_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_6_fu_780_p2 <= "1" when (p_Result_23_6_fu_240_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_7_fu_864_p2 <= "1" when (p_Result_23_7_fu_260_p4 = ap_const_lv16_2D41) else "0";
    tmp_7_fu_276_p2 <= "1" when (tmp_5_fu_126_p1 = ap_const_lv16_2D41) else "0";
    tmp_8_1_fu_366_p2 <= (tmp_7_1_fu_360_p2 and tmp_6_1_fu_354_p2);
    tmp_8_2_fu_450_p2 <= (tmp_7_2_fu_444_p2 and tmp_6_2_fu_438_p2);
    tmp_8_3_fu_534_p2 <= (tmp_7_3_fu_528_p2 and tmp_6_3_fu_522_p2);
    tmp_8_4_fu_618_p2 <= (tmp_7_4_fu_612_p2 and tmp_6_4_fu_606_p2);
    tmp_8_5_fu_702_p2 <= (tmp_7_5_fu_696_p2 and tmp_6_5_fu_690_p2);
    tmp_8_6_fu_786_p2 <= (tmp_7_6_fu_780_p2 and tmp_6_6_fu_774_p2);
    tmp_8_7_fu_870_p2 <= (tmp_7_7_fu_864_p2 and tmp_6_7_fu_858_p2);
    tmp_8_fu_282_p2 <= (tmp_7_fu_276_p2 and tmp_6_fu_270_p2);
    tmp_9_1_fu_372_p2 <= "1" when (p_Result_23_1_fu_140_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_2_fu_456_p2 <= "1" when (p_Result_23_2_fu_160_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_3_fu_540_p2 <= "1" when (p_Result_23_3_fu_180_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_4_fu_624_p2 <= "1" when (p_Result_23_4_fu_200_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_5_fu_708_p2 <= "1" when (p_Result_23_5_fu_220_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_6_fu_792_p2 <= "1" when (p_Result_23_6_fu_240_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_7_fu_876_p2 <= "1" when (p_Result_23_7_fu_260_p4 = ap_const_lv16_D2BF) else "0";
    tmp_9_fu_288_p2 <= "1" when (tmp_5_fu_126_p1 = ap_const_lv16_D2BF) else "0";
    tmp_data_V_fu_942_p9 <= (((((((newSel15_fu_934_p3 & newSel13_fu_850_p3) & newSel11_fu_766_p3) & newSel9_fu_682_p3) & newSel7_fu_598_p3) & newSel5_fu_514_p3) & newSel3_fu_430_p3) & newSel1_fu_346_p3);
    tmp_fu_312_p2 <= (tmp_9_fu_288_p2 and sel_tmp1_fu_306_p2);
    tmp_last_V_fu_967_p2 <= "1" when (soft_txn = ap_const_lv32_38) else "0";
end behav;
