-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bpsk_modulation is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    demod_data_TREADY : IN STD_LOGIC;
    mod_data_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    mod_data_TVALID : IN STD_LOGIC;
    mod_data_TREADY : OUT STD_LOGIC;
    mod_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    demod_data_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    demod_data_TVALID : OUT STD_LOGIC;
    demod_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of bpsk_modulation is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bpsk_modulation,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu21dr-ffvd1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.774000,HLS_SYN_LAT=8,HLS_SYN_TPT=8,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=721,HLS_SYN_LUT=2055,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_81 : STD_LOGIC_VECTOR (7 downto 0) := "10000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal demod_data_V_data_V_1_ack_in : STD_LOGIC;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal mod_data_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal mod_data_V_data_V_0_vld_in : STD_LOGIC;
    signal mod_data_V_data_V_0_vld_out : STD_LOGIC;
    signal mod_data_V_data_V_0_ack_in : STD_LOGIC;
    signal mod_data_V_data_V_0_ack_out : STD_LOGIC;
    signal mod_data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal mod_data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal mod_data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal mod_data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal mod_data_V_data_V_0_sel : STD_LOGIC;
    signal mod_data_V_data_V_0_load_A : STD_LOGIC;
    signal mod_data_V_data_V_0_load_B : STD_LOGIC;
    signal mod_data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mod_data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal mod_data_V_last_V_0_vld_in : STD_LOGIC;
    signal mod_data_V_last_V_0_ack_out : STD_LOGIC;
    signal mod_data_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_data_V_data_V_1_data_in : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_data_V_data_V_1_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_data_V_data_V_1_vld_in : STD_LOGIC;
    signal demod_data_V_data_V_1_vld_out : STD_LOGIC;
    signal demod_data_V_data_V_1_ack_out : STD_LOGIC;
    signal demod_data_V_data_V_1_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_data_V_data_V_1_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal demod_data_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal demod_data_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal demod_data_V_data_V_1_sel : STD_LOGIC;
    signal demod_data_V_data_V_1_load_A : STD_LOGIC;
    signal demod_data_V_data_V_1_load_B : STD_LOGIC;
    signal demod_data_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_data_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal demod_data_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_data_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_data_V_last_V_1_vld_in : STD_LOGIC;
    signal demod_data_V_last_V_1_vld_out : STD_LOGIC;
    signal demod_data_V_last_V_1_ack_in : STD_LOGIC;
    signal demod_data_V_last_V_1_ack_out : STD_LOGIC;
    signal demod_data_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_data_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal demod_data_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal demod_data_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal demod_data_V_last_V_1_sel : STD_LOGIC;
    signal demod_data_V_last_V_1_load_A : STD_LOGIC;
    signal demod_data_V_last_V_1_load_B : STD_LOGIC;
    signal demod_data_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal demod_data_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal demod_axi_trx : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    signal mod_data_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal demod_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_17_reg_2715 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_18_reg_2720 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2725 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_2730 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_2735 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_2745 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_2750 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_2755 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_2760 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_2765 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_2770 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_2775 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_2780 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_2785 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_2790 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_2795 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_2800 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_2805 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_2810 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_2815 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_2820 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_2825 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_2830 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_2835 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2840 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_2845 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2850 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_2855 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_2860 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_2865 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_2870 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_2875 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_2880 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_2885 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_2890 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_2895 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_2900 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_2905 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_2910 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_2915 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_2920 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_2925 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_2930 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_2935 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_2940 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_2945 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_2950 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_2955 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_2960 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_2965 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_2970 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_reg_2975 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_2980 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2985 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_2990 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_reg_2995 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_3000 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_3005 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_3010 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_3015 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_3020 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_3025 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_3030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_reg_3035 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_3040 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_3045 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_3050 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_3055 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_3060 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_3070 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_3075 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_reg_3080 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_3085 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_3090 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_3095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_3100 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_reg_3105 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_3110 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_3115 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_reg_3120 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_reg_3125 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_reg_3130 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_3135 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_reg_3140 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_reg_3145 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_3150 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_3155 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_reg_3160 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_reg_3165 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_reg_3170 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_3175 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_3180 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_reg_3185 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_reg_3190 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_reg_3195 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_3200 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_reg_3205 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_reg_3210 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_3215 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_reg_3220 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_reg_3225 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_3230 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_reg_3235 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_reg_3240 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_reg_3245 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_reg_3250 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_reg_3255 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_reg_3260 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_reg_3265 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_reg_3270 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_fu_1466_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_3285 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_2_reg_3290 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_1_op_fu_1554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_op_reg_3296 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_fu_1672_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_last_V_3_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_3_reg_3306 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_4_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_4_reg_3311 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_5_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_5_reg_3316 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_6_fu_1775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_6_reg_3321 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_7_reg_3326 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_2_fu_1933_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_data_V_3_fu_2082_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_data_V_4_fu_2231_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_data_V_5_fu_2380_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_data_V_6_fu_2529_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_data_V_7_fu_2678_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal tmp_38_7_fu_1807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal tmp_fu_318_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_346_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_538_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_13_fu_562_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_12_fu_546_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_11_fu_530_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_10_fu_514_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_7_fu_498_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_s_fu_482_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_9_fu_466_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_8_fu_450_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_434_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_6_fu_418_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_5_fu_402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_4_fu_386_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_3_fu_370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_2_fu_354_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_1_fu_338_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_fu_322_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal demod_axi_trx_load_o_fu_1514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1520_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_op_fu_1534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_fu_1540_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_29_fu_1665_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_28_fu_1658_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_27_fu_1651_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_26_fu_1644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_25_fu_1637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_24_fu_1630_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_23_fu_1623_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_22_fu_1616_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_21_fu_1609_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_20_fu_1602_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_19_fu_1595_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_18_fu_1588_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_17_fu_1581_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_16_fu_1574_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_15_fu_1567_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_14_fu_1560_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_2_fu_1709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_op_fu_1721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_3_fu_1727_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_3_op_fu_1741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_4_fu_1747_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_4_op_fu_1761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_5_fu_1767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_5_op_fu_1781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_6_fu_1787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_6_op_fu_1801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_45_fu_1926_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_44_fu_1919_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_43_fu_1912_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_42_fu_1905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_41_fu_1898_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_40_fu_1891_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_39_fu_1884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_38_fu_1877_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_37_fu_1870_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_36_fu_1863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_35_fu_1856_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_34_fu_1849_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_33_fu_1842_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_32_fu_1835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_31_fu_1828_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_30_fu_1821_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_61_fu_2075_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_60_fu_2068_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_59_fu_2061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_58_fu_2054_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_57_fu_2047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_56_fu_2040_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_55_fu_2033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_54_fu_2026_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_53_fu_2019_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_52_fu_2012_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_51_fu_2005_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_50_fu_1998_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_49_fu_1991_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_48_fu_1984_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_47_fu_1977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_46_fu_1970_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_77_fu_2224_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_76_fu_2217_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_75_fu_2210_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_74_fu_2203_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_73_fu_2196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_72_fu_2189_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_71_fu_2182_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_70_fu_2175_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_69_fu_2168_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_68_fu_2161_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_67_fu_2154_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_66_fu_2147_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_65_fu_2140_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_64_fu_2133_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_63_fu_2126_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_62_fu_2119_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_93_fu_2373_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_92_fu_2366_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_91_fu_2359_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_90_fu_2352_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_89_fu_2345_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_88_fu_2338_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_87_fu_2331_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_86_fu_2324_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_85_fu_2317_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_84_fu_2310_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_83_fu_2303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_82_fu_2296_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_81_fu_2289_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_80_fu_2282_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_79_fu_2275_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_78_fu_2268_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_109_fu_2522_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_108_fu_2515_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_107_fu_2508_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_106_fu_2501_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_105_fu_2494_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_104_fu_2487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_103_fu_2480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_102_fu_2473_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_101_fu_2466_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_100_fu_2459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_99_fu_2452_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_98_fu_2445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_97_fu_2438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_96_fu_2431_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_95_fu_2424_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_94_fu_2417_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_125_fu_2671_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_124_fu_2664_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_123_fu_2657_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_122_fu_2650_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_121_fu_2643_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_120_fu_2636_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_119_fu_2629_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_118_fu_2622_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_117_fu_2615_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_116_fu_2608_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_115_fu_2601_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_114_fu_2594_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_113_fu_2587_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_112_fu_2580_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_111_fu_2573_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_110_fu_2566_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((demod_data_V_data_V_1_ack_out = ap_const_logic_1) and (demod_data_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        demod_data_V_data_V_1_sel_rd <= not(demod_data_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((demod_data_V_data_V_1_ack_in = ap_const_logic_1) and (demod_data_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        demod_data_V_data_V_1_sel_wr <= not(demod_data_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((demod_data_V_data_V_1_state = ap_const_lv2_2) and (demod_data_V_data_V_1_vld_in = ap_const_logic_0)) or ((demod_data_V_data_V_1_state = ap_const_lv2_3) and (demod_data_V_data_V_1_vld_in = ap_const_logic_0) and (demod_data_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    demod_data_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((demod_data_V_data_V_1_state = ap_const_lv2_1) and (demod_data_V_data_V_1_ack_out = ap_const_logic_0)) or ((demod_data_V_data_V_1_state = ap_const_lv2_3) and (demod_data_V_data_V_1_ack_out = ap_const_logic_0) and (demod_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_data_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((demod_data_V_data_V_1_vld_in = ap_const_logic_0) and (demod_data_V_data_V_1_ack_out = ap_const_logic_1))) and not(((demod_data_V_data_V_1_ack_out = ap_const_logic_0) and (demod_data_V_data_V_1_vld_in = ap_const_logic_1))) and (demod_data_V_data_V_1_state = ap_const_lv2_3)) or ((demod_data_V_data_V_1_state = ap_const_lv2_1) and (demod_data_V_data_V_1_ack_out = ap_const_logic_1)) or ((demod_data_V_data_V_1_state = ap_const_lv2_2) and (demod_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_data_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    demod_data_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((demod_data_V_last_V_1_ack_out = ap_const_logic_1) and (demod_data_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        demod_data_V_last_V_1_sel_rd <= not(demod_data_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((demod_data_V_last_V_1_ack_in = ap_const_logic_1) and (demod_data_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        demod_data_V_last_V_1_sel_wr <= not(demod_data_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    demod_data_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                demod_data_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((demod_data_V_last_V_1_state = ap_const_lv2_2) and (demod_data_V_last_V_1_vld_in = ap_const_logic_0)) or ((demod_data_V_last_V_1_state = ap_const_lv2_3) and (demod_data_V_last_V_1_vld_in = ap_const_logic_0) and (demod_data_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    demod_data_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((demod_data_V_last_V_1_state = ap_const_lv2_1) and (demod_data_V_last_V_1_ack_out = ap_const_logic_0)) or ((demod_data_V_last_V_1_state = ap_const_lv2_3) and (demod_data_V_last_V_1_ack_out = ap_const_logic_0) and (demod_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_data_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((demod_data_V_last_V_1_vld_in = ap_const_logic_0) and (demod_data_V_last_V_1_ack_out = ap_const_logic_1))) and not(((demod_data_V_last_V_1_ack_out = ap_const_logic_0) and (demod_data_V_last_V_1_vld_in = ap_const_logic_1))) and (demod_data_V_last_V_1_state = ap_const_lv2_3)) or ((demod_data_V_last_V_1_state = ap_const_lv2_1) and (demod_data_V_last_V_1_ack_out = ap_const_logic_1)) or ((demod_data_V_last_V_1_state = ap_const_lv2_2) and (demod_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    demod_data_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    demod_data_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mod_data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mod_data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((mod_data_V_data_V_0_ack_out = ap_const_logic_1) and (mod_data_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        mod_data_V_data_V_0_sel_rd <= not(mod_data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    mod_data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mod_data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((mod_data_V_data_V_0_ack_in = ap_const_logic_1) and (mod_data_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        mod_data_V_data_V_0_sel_wr <= not(mod_data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    mod_data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mod_data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((mod_data_V_data_V_0_state = ap_const_lv2_2) and (mod_data_V_data_V_0_vld_in = ap_const_logic_0)) or ((mod_data_V_data_V_0_state = ap_const_lv2_3) and (mod_data_V_data_V_0_vld_in = ap_const_logic_0) and (mod_data_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    mod_data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((mod_data_V_data_V_0_state = ap_const_lv2_1) and (mod_data_V_data_V_0_ack_out = ap_const_logic_0)) or ((mod_data_V_data_V_0_state = ap_const_lv2_3) and (mod_data_V_data_V_0_ack_out = ap_const_logic_0) and (mod_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    mod_data_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((mod_data_V_data_V_0_vld_in = ap_const_logic_0) and (mod_data_V_data_V_0_ack_out = ap_const_logic_1))) and not(((mod_data_V_data_V_0_ack_out = ap_const_logic_0) and (mod_data_V_data_V_0_vld_in = ap_const_logic_1))) and (mod_data_V_data_V_0_state = ap_const_lv2_3)) or ((mod_data_V_data_V_0_state = ap_const_lv2_1) and (mod_data_V_data_V_0_ack_out = ap_const_logic_1)) or ((mod_data_V_data_V_0_state = ap_const_lv2_2) and (mod_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    mod_data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    mod_data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mod_data_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mod_data_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((mod_data_V_last_V_0_state = ap_const_lv2_2) and (mod_data_V_last_V_0_vld_in = ap_const_logic_0)) or ((mod_data_V_last_V_0_state = ap_const_lv2_3) and (mod_data_V_last_V_0_vld_in = ap_const_logic_0) and (mod_data_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    mod_data_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((mod_data_V_last_V_0_state = ap_const_lv2_1) and (mod_data_V_last_V_0_ack_out = ap_const_logic_0)) or ((mod_data_V_last_V_0_state = ap_const_lv2_3) and (mod_data_V_last_V_0_ack_out = ap_const_logic_0) and (mod_data_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    mod_data_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((mod_data_V_last_V_0_vld_in = ap_const_logic_0) and (mod_data_V_last_V_0_ack_out = ap_const_logic_1))) and not(((mod_data_V_last_V_0_ack_out = ap_const_logic_0) and (mod_data_V_last_V_0_vld_in = ap_const_logic_1))) and (mod_data_V_last_V_0_state = ap_const_lv2_3)) or ((mod_data_V_last_V_0_state = ap_const_lv2_1) and (mod_data_V_last_V_0_ack_out = ap_const_logic_1)) or ((mod_data_V_last_V_0_state = ap_const_lv2_2) and (mod_data_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    mod_data_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    mod_data_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                demod_axi_trx <= tmp_38_7_fu_1807_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_data_V_data_V_1_load_A = ap_const_logic_1)) then
                demod_data_V_data_V_1_payload_A <= demod_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_data_V_data_V_1_load_B = ap_const_logic_1)) then
                demod_data_V_data_V_1_payload_B <= demod_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_data_V_last_V_1_load_A = ap_const_logic_1)) then
                demod_data_V_last_V_1_payload_A <= demod_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((demod_data_V_last_V_1_load_B = ap_const_logic_1)) then
                demod_data_V_last_V_1_payload_B <= demod_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mod_data_V_data_V_0_load_A = ap_const_logic_1)) then
                mod_data_V_data_V_0_payload_A <= mod_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mod_data_V_data_V_0_load_B = ap_const_logic_1)) then
                mod_data_V_data_V_0_payload_B <= mod_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_100_reg_3130 <= mod_data_V_data_V_0_data_out(99 downto 99);
                tmp_101_reg_3135 <= mod_data_V_data_V_0_data_out(100 downto 100);
                tmp_102_reg_3140 <= mod_data_V_data_V_0_data_out(101 downto 101);
                tmp_103_reg_3145 <= mod_data_V_data_V_0_data_out(102 downto 102);
                tmp_104_reg_3150 <= mod_data_V_data_V_0_data_out(103 downto 103);
                tmp_105_reg_3155 <= mod_data_V_data_V_0_data_out(104 downto 104);
                tmp_106_reg_3160 <= mod_data_V_data_V_0_data_out(105 downto 105);
                tmp_107_reg_3165 <= mod_data_V_data_V_0_data_out(106 downto 106);
                tmp_108_reg_3170 <= mod_data_V_data_V_0_data_out(107 downto 107);
                tmp_109_reg_3175 <= mod_data_V_data_V_0_data_out(108 downto 108);
                tmp_110_reg_3180 <= mod_data_V_data_V_0_data_out(109 downto 109);
                tmp_111_reg_3185 <= mod_data_V_data_V_0_data_out(110 downto 110);
                tmp_112_reg_3190 <= mod_data_V_data_V_0_data_out(111 downto 111);
                tmp_113_reg_3195 <= mod_data_V_data_V_0_data_out(112 downto 112);
                tmp_114_reg_3200 <= mod_data_V_data_V_0_data_out(113 downto 113);
                tmp_115_reg_3205 <= mod_data_V_data_V_0_data_out(114 downto 114);
                tmp_116_reg_3210 <= mod_data_V_data_V_0_data_out(115 downto 115);
                tmp_117_reg_3215 <= mod_data_V_data_V_0_data_out(116 downto 116);
                tmp_118_reg_3220 <= mod_data_V_data_V_0_data_out(117 downto 117);
                tmp_119_reg_3225 <= mod_data_V_data_V_0_data_out(118 downto 118);
                tmp_120_reg_3230 <= mod_data_V_data_V_0_data_out(119 downto 119);
                tmp_121_reg_3235 <= mod_data_V_data_V_0_data_out(120 downto 120);
                tmp_122_reg_3240 <= mod_data_V_data_V_0_data_out(121 downto 121);
                tmp_123_reg_3245 <= mod_data_V_data_V_0_data_out(122 downto 122);
                tmp_124_reg_3250 <= mod_data_V_data_V_0_data_out(123 downto 123);
                tmp_125_reg_3255 <= mod_data_V_data_V_0_data_out(124 downto 124);
                tmp_126_reg_3260 <= mod_data_V_data_V_0_data_out(125 downto 125);
                tmp_127_reg_3265 <= mod_data_V_data_V_0_data_out(126 downto 126);
                tmp_128_reg_3270 <= mod_data_V_data_V_0_data_out(127 downto 127);
                tmp_17_reg_2715 <= mod_data_V_data_V_0_data_out(16 downto 16);
                tmp_18_reg_2720 <= mod_data_V_data_V_0_data_out(17 downto 17);
                tmp_19_reg_2725 <= mod_data_V_data_V_0_data_out(18 downto 18);
                tmp_20_reg_2730 <= mod_data_V_data_V_0_data_out(19 downto 19);
                tmp_21_reg_2735 <= mod_data_V_data_V_0_data_out(20 downto 20);
                tmp_22_reg_2740 <= mod_data_V_data_V_0_data_out(21 downto 21);
                tmp_23_reg_2745 <= mod_data_V_data_V_0_data_out(22 downto 22);
                tmp_24_reg_2750 <= mod_data_V_data_V_0_data_out(23 downto 23);
                tmp_25_reg_2755 <= mod_data_V_data_V_0_data_out(24 downto 24);
                tmp_26_reg_2760 <= mod_data_V_data_V_0_data_out(25 downto 25);
                tmp_27_reg_2765 <= mod_data_V_data_V_0_data_out(26 downto 26);
                tmp_28_reg_2770 <= mod_data_V_data_V_0_data_out(27 downto 27);
                tmp_29_reg_2775 <= mod_data_V_data_V_0_data_out(28 downto 28);
                tmp_30_reg_2780 <= mod_data_V_data_V_0_data_out(29 downto 29);
                tmp_31_reg_2785 <= mod_data_V_data_V_0_data_out(30 downto 30);
                tmp_32_reg_2790 <= mod_data_V_data_V_0_data_out(31 downto 31);
                tmp_33_reg_2795 <= mod_data_V_data_V_0_data_out(32 downto 32);
                tmp_34_reg_2800 <= mod_data_V_data_V_0_data_out(33 downto 33);
                tmp_35_reg_2805 <= mod_data_V_data_V_0_data_out(34 downto 34);
                tmp_36_reg_2810 <= mod_data_V_data_V_0_data_out(35 downto 35);
                tmp_37_reg_2815 <= mod_data_V_data_V_0_data_out(36 downto 36);
                tmp_38_1_op_reg_3296 <= tmp_38_1_op_fu_1554_p2;
                tmp_38_reg_2820 <= mod_data_V_data_V_0_data_out(37 downto 37);
                tmp_39_reg_2825 <= mod_data_V_data_V_0_data_out(38 downto 38);
                tmp_40_reg_2830 <= mod_data_V_data_V_0_data_out(39 downto 39);
                tmp_41_reg_2835 <= mod_data_V_data_V_0_data_out(40 downto 40);
                tmp_42_reg_2840 <= mod_data_V_data_V_0_data_out(41 downto 41);
                tmp_43_reg_2845 <= mod_data_V_data_V_0_data_out(42 downto 42);
                tmp_44_reg_2850 <= mod_data_V_data_V_0_data_out(43 downto 43);
                tmp_45_reg_2855 <= mod_data_V_data_V_0_data_out(44 downto 44);
                tmp_46_reg_2860 <= mod_data_V_data_V_0_data_out(45 downto 45);
                tmp_47_reg_2865 <= mod_data_V_data_V_0_data_out(46 downto 46);
                tmp_48_reg_2870 <= mod_data_V_data_V_0_data_out(47 downto 47);
                tmp_49_reg_2875 <= mod_data_V_data_V_0_data_out(48 downto 48);
                tmp_50_reg_2880 <= mod_data_V_data_V_0_data_out(49 downto 49);
                tmp_51_reg_2885 <= mod_data_V_data_V_0_data_out(50 downto 50);
                tmp_52_reg_2890 <= mod_data_V_data_V_0_data_out(51 downto 51);
                tmp_53_reg_2895 <= mod_data_V_data_V_0_data_out(52 downto 52);
                tmp_54_reg_2900 <= mod_data_V_data_V_0_data_out(53 downto 53);
                tmp_55_reg_2905 <= mod_data_V_data_V_0_data_out(54 downto 54);
                tmp_56_reg_2910 <= mod_data_V_data_V_0_data_out(55 downto 55);
                tmp_57_reg_2915 <= mod_data_V_data_V_0_data_out(56 downto 56);
                tmp_58_reg_2920 <= mod_data_V_data_V_0_data_out(57 downto 57);
                tmp_59_reg_2925 <= mod_data_V_data_V_0_data_out(58 downto 58);
                tmp_60_reg_2930 <= mod_data_V_data_V_0_data_out(59 downto 59);
                tmp_61_reg_2935 <= mod_data_V_data_V_0_data_out(60 downto 60);
                tmp_62_reg_2940 <= mod_data_V_data_V_0_data_out(61 downto 61);
                tmp_63_reg_2945 <= mod_data_V_data_V_0_data_out(62 downto 62);
                tmp_64_reg_2950 <= mod_data_V_data_V_0_data_out(63 downto 63);
                tmp_65_reg_2955 <= mod_data_V_data_V_0_data_out(64 downto 64);
                tmp_66_reg_2960 <= mod_data_V_data_V_0_data_out(65 downto 65);
                tmp_67_reg_2965 <= mod_data_V_data_V_0_data_out(66 downto 66);
                tmp_68_reg_2970 <= mod_data_V_data_V_0_data_out(67 downto 67);
                tmp_69_reg_2975 <= mod_data_V_data_V_0_data_out(68 downto 68);
                tmp_70_reg_2980 <= mod_data_V_data_V_0_data_out(69 downto 69);
                tmp_71_reg_2985 <= mod_data_V_data_V_0_data_out(70 downto 70);
                tmp_72_reg_2990 <= mod_data_V_data_V_0_data_out(71 downto 71);
                tmp_73_reg_2995 <= mod_data_V_data_V_0_data_out(72 downto 72);
                tmp_74_reg_3000 <= mod_data_V_data_V_0_data_out(73 downto 73);
                tmp_75_reg_3005 <= mod_data_V_data_V_0_data_out(74 downto 74);
                tmp_76_reg_3010 <= mod_data_V_data_V_0_data_out(75 downto 75);
                tmp_77_reg_3015 <= mod_data_V_data_V_0_data_out(76 downto 76);
                tmp_78_reg_3020 <= mod_data_V_data_V_0_data_out(77 downto 77);
                tmp_79_reg_3025 <= mod_data_V_data_V_0_data_out(78 downto 78);
                tmp_80_reg_3030 <= mod_data_V_data_V_0_data_out(79 downto 79);
                tmp_81_reg_3035 <= mod_data_V_data_V_0_data_out(80 downto 80);
                tmp_82_reg_3040 <= mod_data_V_data_V_0_data_out(81 downto 81);
                tmp_83_reg_3045 <= mod_data_V_data_V_0_data_out(82 downto 82);
                tmp_84_reg_3050 <= mod_data_V_data_V_0_data_out(83 downto 83);
                tmp_85_reg_3055 <= mod_data_V_data_V_0_data_out(84 downto 84);
                tmp_86_reg_3060 <= mod_data_V_data_V_0_data_out(85 downto 85);
                tmp_87_reg_3065 <= mod_data_V_data_V_0_data_out(86 downto 86);
                tmp_88_reg_3070 <= mod_data_V_data_V_0_data_out(87 downto 87);
                tmp_89_reg_3075 <= mod_data_V_data_V_0_data_out(88 downto 88);
                tmp_90_reg_3080 <= mod_data_V_data_V_0_data_out(89 downto 89);
                tmp_91_reg_3085 <= mod_data_V_data_V_0_data_out(90 downto 90);
                tmp_92_reg_3090 <= mod_data_V_data_V_0_data_out(91 downto 91);
                tmp_93_reg_3095 <= mod_data_V_data_V_0_data_out(92 downto 92);
                tmp_94_reg_3100 <= mod_data_V_data_V_0_data_out(93 downto 93);
                tmp_95_reg_3105 <= mod_data_V_data_V_0_data_out(94 downto 94);
                tmp_96_reg_3110 <= mod_data_V_data_V_0_data_out(95 downto 95);
                tmp_97_reg_3115 <= mod_data_V_data_V_0_data_out(96 downto 96);
                tmp_98_reg_3120 <= mod_data_V_data_V_0_data_out(97 downto 97);
                tmp_99_reg_3125 <= mod_data_V_data_V_0_data_out(98 downto 98);
                tmp_last_V_1_reg_3285 <= tmp_last_V_1_fu_1528_p2;
                tmp_last_V_2_reg_3290 <= tmp_last_V_2_fu_1548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_last_V_3_reg_3306 <= tmp_last_V_3_fu_1715_p2;
                tmp_last_V_4_reg_3311 <= tmp_last_V_4_fu_1735_p2;
                tmp_last_V_5_reg_3316 <= tmp_last_V_5_fu_1755_p2;
                tmp_last_V_6_reg_3321 <= tmp_last_V_6_fu_1775_p2;
                tmp_last_V_7_reg_3326 <= tmp_last_V_7_fu_1795_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, demod_data_V_data_V_1_ack_in, mod_data_V_data_V_0_vld_out, demod_data_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((mod_data_V_data_V_0_vld_out = ap_const_logic_0) or (ap_start = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (demod_data_V_last_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, demod_data_V_data_V_1_ack_in, mod_data_V_data_V_0_vld_out, demod_data_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((mod_data_V_data_V_0_vld_out = ap_const_logic_0) or (demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_start = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (demod_data_V_last_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, demod_data_V_data_V_1_ack_in, mod_data_V_data_V_0_vld_out, demod_data_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((mod_data_V_data_V_0_vld_out = ap_const_logic_0) or (demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_start = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (demod_data_V_last_V_1_ack_in = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage1_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage1_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage2_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage2_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage3_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage3_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage4_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage4_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage5_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage5_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage6_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage6_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage7_11001 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, demod_data_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage7_subdone <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, mod_data_V_data_V_0_vld_out)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((mod_data_V_data_V_0_vld_out = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter1_assign_proc : process(demod_data_V_data_V_1_ack_in, demod_data_V_last_V_1_ack_in)
    begin
                ap_block_state9_pp0_stage0_iter1 <= ((demod_data_V_data_V_1_ack_in = ap_const_logic_0) or (demod_data_V_last_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    demod_axi_trx_load_o_fu_1514_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(demod_axi_trx));
    demod_data_TDATA <= demod_data_V_data_V_1_data_out;

    demod_data_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, demod_data_V_data_V_1_state, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            demod_data_TDATA_blk_n <= demod_data_V_data_V_1_state(1);
        else 
            demod_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    demod_data_TLAST <= demod_data_V_last_V_1_data_out;
    demod_data_TVALID <= demod_data_V_last_V_1_state(0);
    demod_data_V_data_V_1_ack_in <= demod_data_V_data_V_1_state(1);
    demod_data_V_data_V_1_ack_out <= demod_data_TREADY;

    demod_data_V_data_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_data_V_fu_1466_p17, tmp_data_V_1_fu_1672_p17, tmp_data_V_2_fu_1933_p17, tmp_data_V_3_fu_2082_p17, tmp_data_V_4_fu_2231_p17, tmp_data_V_5_fu_2380_p17, tmp_data_V_6_fu_2529_p17, tmp_data_V_7_fu_2678_p17, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage7_01001)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_7_fu_2678_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_6_fu_2529_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_5_fu_2380_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_4_fu_2231_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_3_fu_2082_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_2_fu_1933_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_1_fu_1672_p17;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                demod_data_V_data_V_1_data_in <= tmp_data_V_fu_1466_p17;
            else 
                demod_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            demod_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    demod_data_V_data_V_1_data_out_assign_proc : process(demod_data_V_data_V_1_payload_A, demod_data_V_data_V_1_payload_B, demod_data_V_data_V_1_sel)
    begin
        if ((demod_data_V_data_V_1_sel = ap_const_logic_1)) then 
            demod_data_V_data_V_1_data_out <= demod_data_V_data_V_1_payload_B;
        else 
            demod_data_V_data_V_1_data_out <= demod_data_V_data_V_1_payload_A;
        end if; 
    end process;

    demod_data_V_data_V_1_load_A <= (not(demod_data_V_data_V_1_sel_wr) and demod_data_V_data_V_1_state_cmp_full);
    demod_data_V_data_V_1_load_B <= (demod_data_V_data_V_1_state_cmp_full and demod_data_V_data_V_1_sel_wr);
    demod_data_V_data_V_1_sel <= demod_data_V_data_V_1_sel_rd;
    demod_data_V_data_V_1_state_cmp_full <= '0' when (demod_data_V_data_V_1_state = ap_const_lv2_1) else '1';

    demod_data_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            demod_data_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            demod_data_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    demod_data_V_data_V_1_vld_out <= demod_data_V_data_V_1_state(0);
    demod_data_V_last_V_1_ack_in <= demod_data_V_last_V_1_state(1);
    demod_data_V_last_V_1_ack_out <= demod_data_TREADY;

    demod_data_V_last_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_last_V_fu_1507_p2, tmp_last_V_1_reg_3285, tmp_last_V_2_reg_3290, tmp_last_V_3_reg_3306, tmp_last_V_4_reg_3311, tmp_last_V_5_reg_3316, tmp_last_V_6_reg_3321, tmp_last_V_7_reg_3326, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage7_01001)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_7_reg_3326;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_6_reg_3321;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_5_reg_3316;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_4_reg_3311;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_3_reg_3306;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_2_reg_3290;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_1_reg_3285;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                demod_data_V_last_V_1_data_in <= tmp_last_V_fu_1507_p2;
            else 
                demod_data_V_last_V_1_data_in <= "X";
            end if;
        else 
            demod_data_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    demod_data_V_last_V_1_data_out_assign_proc : process(demod_data_V_last_V_1_payload_A, demod_data_V_last_V_1_payload_B, demod_data_V_last_V_1_sel)
    begin
        if ((demod_data_V_last_V_1_sel = ap_const_logic_1)) then 
            demod_data_V_last_V_1_data_out <= demod_data_V_last_V_1_payload_B;
        else 
            demod_data_V_last_V_1_data_out <= demod_data_V_last_V_1_payload_A;
        end if; 
    end process;

    demod_data_V_last_V_1_load_A <= (not(demod_data_V_last_V_1_sel_wr) and demod_data_V_last_V_1_state_cmp_full);
    demod_data_V_last_V_1_load_B <= (demod_data_V_last_V_1_state_cmp_full and demod_data_V_last_V_1_sel_wr);
    demod_data_V_last_V_1_sel <= demod_data_V_last_V_1_sel_rd;
    demod_data_V_last_V_1_state_cmp_full <= '0' when (demod_data_V_last_V_1_state = ap_const_lv2_1) else '1';

    demod_data_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            demod_data_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            demod_data_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    demod_data_V_last_V_1_vld_out <= demod_data_V_last_V_1_state(0);

    mod_data_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, mod_data_V_data_V_0_state, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            mod_data_TDATA_blk_n <= mod_data_V_data_V_0_state(0);
        else 
            mod_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mod_data_TREADY <= mod_data_V_last_V_0_state(1);
    mod_data_V_data_V_0_ack_in <= mod_data_V_data_V_0_state(1);

    mod_data_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mod_data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            mod_data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    mod_data_V_data_V_0_data_out_assign_proc : process(mod_data_V_data_V_0_payload_A, mod_data_V_data_V_0_payload_B, mod_data_V_data_V_0_sel)
    begin
        if ((mod_data_V_data_V_0_sel = ap_const_logic_1)) then 
            mod_data_V_data_V_0_data_out <= mod_data_V_data_V_0_payload_B;
        else 
            mod_data_V_data_V_0_data_out <= mod_data_V_data_V_0_payload_A;
        end if; 
    end process;

    mod_data_V_data_V_0_load_A <= (mod_data_V_data_V_0_state_cmp_full and not(mod_data_V_data_V_0_sel_wr));
    mod_data_V_data_V_0_load_B <= (mod_data_V_data_V_0_state_cmp_full and mod_data_V_data_V_0_sel_wr);
    mod_data_V_data_V_0_sel <= mod_data_V_data_V_0_sel_rd;
    mod_data_V_data_V_0_state_cmp_full <= '0' when (mod_data_V_data_V_0_state = ap_const_lv2_1) else '1';
    mod_data_V_data_V_0_vld_in <= mod_data_TVALID;
    mod_data_V_data_V_0_vld_out <= mod_data_V_data_V_0_state(0);

    mod_data_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mod_data_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            mod_data_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    mod_data_V_last_V_0_vld_in <= mod_data_TVALID;
    storemerge_100_fu_2459_p3 <= 
        ap_const_lv8_7F when (tmp_103_reg_3145(0) = '1') else 
        ap_const_lv8_81;
    storemerge_101_fu_2466_p3 <= 
        ap_const_lv8_7F when (tmp_104_reg_3150(0) = '1') else 
        ap_const_lv8_81;
    storemerge_102_fu_2473_p3 <= 
        ap_const_lv8_7F when (tmp_105_reg_3155(0) = '1') else 
        ap_const_lv8_81;
    storemerge_103_fu_2480_p3 <= 
        ap_const_lv8_7F when (tmp_106_reg_3160(0) = '1') else 
        ap_const_lv8_81;
    storemerge_104_fu_2487_p3 <= 
        ap_const_lv8_7F when (tmp_107_reg_3165(0) = '1') else 
        ap_const_lv8_81;
    storemerge_105_fu_2494_p3 <= 
        ap_const_lv8_7F when (tmp_108_reg_3170(0) = '1') else 
        ap_const_lv8_81;
    storemerge_106_fu_2501_p3 <= 
        ap_const_lv8_7F when (tmp_109_reg_3175(0) = '1') else 
        ap_const_lv8_81;
    storemerge_107_fu_2508_p3 <= 
        ap_const_lv8_7F when (tmp_110_reg_3180(0) = '1') else 
        ap_const_lv8_81;
    storemerge_108_fu_2515_p3 <= 
        ap_const_lv8_7F when (tmp_111_reg_3185(0) = '1') else 
        ap_const_lv8_81;
    storemerge_109_fu_2522_p3 <= 
        ap_const_lv8_7F when (tmp_112_reg_3190(0) = '1') else 
        ap_const_lv8_81;
    storemerge_10_fu_514_p3 <= 
        ap_const_lv8_7F when (tmp_13_fu_506_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_110_fu_2566_p3 <= 
        ap_const_lv8_7F when (tmp_113_reg_3195(0) = '1') else 
        ap_const_lv8_81;
    storemerge_111_fu_2573_p3 <= 
        ap_const_lv8_7F when (tmp_114_reg_3200(0) = '1') else 
        ap_const_lv8_81;
    storemerge_112_fu_2580_p3 <= 
        ap_const_lv8_7F when (tmp_115_reg_3205(0) = '1') else 
        ap_const_lv8_81;
    storemerge_113_fu_2587_p3 <= 
        ap_const_lv8_7F when (tmp_116_reg_3210(0) = '1') else 
        ap_const_lv8_81;
    storemerge_114_fu_2594_p3 <= 
        ap_const_lv8_7F when (tmp_117_reg_3215(0) = '1') else 
        ap_const_lv8_81;
    storemerge_115_fu_2601_p3 <= 
        ap_const_lv8_7F when (tmp_118_reg_3220(0) = '1') else 
        ap_const_lv8_81;
    storemerge_116_fu_2608_p3 <= 
        ap_const_lv8_7F when (tmp_119_reg_3225(0) = '1') else 
        ap_const_lv8_81;
    storemerge_117_fu_2615_p3 <= 
        ap_const_lv8_7F when (tmp_120_reg_3230(0) = '1') else 
        ap_const_lv8_81;
    storemerge_118_fu_2622_p3 <= 
        ap_const_lv8_7F when (tmp_121_reg_3235(0) = '1') else 
        ap_const_lv8_81;
    storemerge_119_fu_2629_p3 <= 
        ap_const_lv8_7F when (tmp_122_reg_3240(0) = '1') else 
        ap_const_lv8_81;
    storemerge_11_fu_530_p3 <= 
        ap_const_lv8_7F when (tmp_14_fu_522_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_120_fu_2636_p3 <= 
        ap_const_lv8_7F when (tmp_123_reg_3245(0) = '1') else 
        ap_const_lv8_81;
    storemerge_121_fu_2643_p3 <= 
        ap_const_lv8_7F when (tmp_124_reg_3250(0) = '1') else 
        ap_const_lv8_81;
    storemerge_122_fu_2650_p3 <= 
        ap_const_lv8_7F when (tmp_125_reg_3255(0) = '1') else 
        ap_const_lv8_81;
    storemerge_123_fu_2657_p3 <= 
        ap_const_lv8_7F when (tmp_126_reg_3260(0) = '1') else 
        ap_const_lv8_81;
    storemerge_124_fu_2664_p3 <= 
        ap_const_lv8_7F when (tmp_127_reg_3265(0) = '1') else 
        ap_const_lv8_81;
    storemerge_125_fu_2671_p3 <= 
        ap_const_lv8_7F when (tmp_128_reg_3270(0) = '1') else 
        ap_const_lv8_81;
    storemerge_12_fu_546_p3 <= 
        ap_const_lv8_7F when (tmp_15_fu_538_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_13_fu_562_p3 <= 
        ap_const_lv8_7F when (tmp_16_fu_554_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_14_fu_1560_p3 <= 
        ap_const_lv8_7F when (tmp_17_reg_2715(0) = '1') else 
        ap_const_lv8_81;
    storemerge_15_fu_1567_p3 <= 
        ap_const_lv8_7F when (tmp_18_reg_2720(0) = '1') else 
        ap_const_lv8_81;
    storemerge_16_fu_1574_p3 <= 
        ap_const_lv8_7F when (tmp_19_reg_2725(0) = '1') else 
        ap_const_lv8_81;
    storemerge_17_fu_1581_p3 <= 
        ap_const_lv8_7F when (tmp_20_reg_2730(0) = '1') else 
        ap_const_lv8_81;
    storemerge_18_fu_1588_p3 <= 
        ap_const_lv8_7F when (tmp_21_reg_2735(0) = '1') else 
        ap_const_lv8_81;
    storemerge_19_fu_1595_p3 <= 
        ap_const_lv8_7F when (tmp_22_reg_2740(0) = '1') else 
        ap_const_lv8_81;
    storemerge_1_fu_338_p3 <= 
        ap_const_lv8_7F when (tmp_1_fu_330_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_20_fu_1602_p3 <= 
        ap_const_lv8_7F when (tmp_23_reg_2745(0) = '1') else 
        ap_const_lv8_81;
    storemerge_21_fu_1609_p3 <= 
        ap_const_lv8_7F when (tmp_24_reg_2750(0) = '1') else 
        ap_const_lv8_81;
    storemerge_22_fu_1616_p3 <= 
        ap_const_lv8_7F when (tmp_25_reg_2755(0) = '1') else 
        ap_const_lv8_81;
    storemerge_23_fu_1623_p3 <= 
        ap_const_lv8_7F when (tmp_26_reg_2760(0) = '1') else 
        ap_const_lv8_81;
    storemerge_24_fu_1630_p3 <= 
        ap_const_lv8_7F when (tmp_27_reg_2765(0) = '1') else 
        ap_const_lv8_81;
    storemerge_25_fu_1637_p3 <= 
        ap_const_lv8_7F when (tmp_28_reg_2770(0) = '1') else 
        ap_const_lv8_81;
    storemerge_26_fu_1644_p3 <= 
        ap_const_lv8_7F when (tmp_29_reg_2775(0) = '1') else 
        ap_const_lv8_81;
    storemerge_27_fu_1651_p3 <= 
        ap_const_lv8_7F when (tmp_30_reg_2780(0) = '1') else 
        ap_const_lv8_81;
    storemerge_28_fu_1658_p3 <= 
        ap_const_lv8_7F when (tmp_31_reg_2785(0) = '1') else 
        ap_const_lv8_81;
    storemerge_29_fu_1665_p3 <= 
        ap_const_lv8_7F when (tmp_32_reg_2790(0) = '1') else 
        ap_const_lv8_81;
    storemerge_2_fu_354_p3 <= 
        ap_const_lv8_7F when (tmp_3_fu_346_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_30_fu_1821_p3 <= 
        ap_const_lv8_7F when (tmp_33_reg_2795(0) = '1') else 
        ap_const_lv8_81;
    storemerge_31_fu_1828_p3 <= 
        ap_const_lv8_7F when (tmp_34_reg_2800(0) = '1') else 
        ap_const_lv8_81;
    storemerge_32_fu_1835_p3 <= 
        ap_const_lv8_7F when (tmp_35_reg_2805(0) = '1') else 
        ap_const_lv8_81;
    storemerge_33_fu_1842_p3 <= 
        ap_const_lv8_7F when (tmp_36_reg_2810(0) = '1') else 
        ap_const_lv8_81;
    storemerge_34_fu_1849_p3 <= 
        ap_const_lv8_7F when (tmp_37_reg_2815(0) = '1') else 
        ap_const_lv8_81;
    storemerge_35_fu_1856_p3 <= 
        ap_const_lv8_7F when (tmp_38_reg_2820(0) = '1') else 
        ap_const_lv8_81;
    storemerge_36_fu_1863_p3 <= 
        ap_const_lv8_7F when (tmp_39_reg_2825(0) = '1') else 
        ap_const_lv8_81;
    storemerge_37_fu_1870_p3 <= 
        ap_const_lv8_7F when (tmp_40_reg_2830(0) = '1') else 
        ap_const_lv8_81;
    storemerge_38_fu_1877_p3 <= 
        ap_const_lv8_7F when (tmp_41_reg_2835(0) = '1') else 
        ap_const_lv8_81;
    storemerge_39_fu_1884_p3 <= 
        ap_const_lv8_7F when (tmp_42_reg_2840(0) = '1') else 
        ap_const_lv8_81;
    storemerge_3_fu_370_p3 <= 
        ap_const_lv8_7F when (tmp_4_fu_362_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_40_fu_1891_p3 <= 
        ap_const_lv8_7F when (tmp_43_reg_2845(0) = '1') else 
        ap_const_lv8_81;
    storemerge_41_fu_1898_p3 <= 
        ap_const_lv8_7F when (tmp_44_reg_2850(0) = '1') else 
        ap_const_lv8_81;
    storemerge_42_fu_1905_p3 <= 
        ap_const_lv8_7F when (tmp_45_reg_2855(0) = '1') else 
        ap_const_lv8_81;
    storemerge_43_fu_1912_p3 <= 
        ap_const_lv8_7F when (tmp_46_reg_2860(0) = '1') else 
        ap_const_lv8_81;
    storemerge_44_fu_1919_p3 <= 
        ap_const_lv8_7F when (tmp_47_reg_2865(0) = '1') else 
        ap_const_lv8_81;
    storemerge_45_fu_1926_p3 <= 
        ap_const_lv8_7F when (tmp_48_reg_2870(0) = '1') else 
        ap_const_lv8_81;
    storemerge_46_fu_1970_p3 <= 
        ap_const_lv8_7F when (tmp_49_reg_2875(0) = '1') else 
        ap_const_lv8_81;
    storemerge_47_fu_1977_p3 <= 
        ap_const_lv8_7F when (tmp_50_reg_2880(0) = '1') else 
        ap_const_lv8_81;
    storemerge_48_fu_1984_p3 <= 
        ap_const_lv8_7F when (tmp_51_reg_2885(0) = '1') else 
        ap_const_lv8_81;
    storemerge_49_fu_1991_p3 <= 
        ap_const_lv8_7F when (tmp_52_reg_2890(0) = '1') else 
        ap_const_lv8_81;
    storemerge_4_fu_386_p3 <= 
        ap_const_lv8_7F when (tmp_5_fu_378_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_50_fu_1998_p3 <= 
        ap_const_lv8_7F when (tmp_53_reg_2895(0) = '1') else 
        ap_const_lv8_81;
    storemerge_51_fu_2005_p3 <= 
        ap_const_lv8_7F when (tmp_54_reg_2900(0) = '1') else 
        ap_const_lv8_81;
    storemerge_52_fu_2012_p3 <= 
        ap_const_lv8_7F when (tmp_55_reg_2905(0) = '1') else 
        ap_const_lv8_81;
    storemerge_53_fu_2019_p3 <= 
        ap_const_lv8_7F when (tmp_56_reg_2910(0) = '1') else 
        ap_const_lv8_81;
    storemerge_54_fu_2026_p3 <= 
        ap_const_lv8_7F when (tmp_57_reg_2915(0) = '1') else 
        ap_const_lv8_81;
    storemerge_55_fu_2033_p3 <= 
        ap_const_lv8_7F when (tmp_58_reg_2920(0) = '1') else 
        ap_const_lv8_81;
    storemerge_56_fu_2040_p3 <= 
        ap_const_lv8_7F when (tmp_59_reg_2925(0) = '1') else 
        ap_const_lv8_81;
    storemerge_57_fu_2047_p3 <= 
        ap_const_lv8_7F when (tmp_60_reg_2930(0) = '1') else 
        ap_const_lv8_81;
    storemerge_58_fu_2054_p3 <= 
        ap_const_lv8_7F when (tmp_61_reg_2935(0) = '1') else 
        ap_const_lv8_81;
    storemerge_59_fu_2061_p3 <= 
        ap_const_lv8_7F when (tmp_62_reg_2940(0) = '1') else 
        ap_const_lv8_81;
    storemerge_5_fu_402_p3 <= 
        ap_const_lv8_7F when (tmp_6_fu_394_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_60_fu_2068_p3 <= 
        ap_const_lv8_7F when (tmp_63_reg_2945(0) = '1') else 
        ap_const_lv8_81;
    storemerge_61_fu_2075_p3 <= 
        ap_const_lv8_7F when (tmp_64_reg_2950(0) = '1') else 
        ap_const_lv8_81;
    storemerge_62_fu_2119_p3 <= 
        ap_const_lv8_7F when (tmp_65_reg_2955(0) = '1') else 
        ap_const_lv8_81;
    storemerge_63_fu_2126_p3 <= 
        ap_const_lv8_7F when (tmp_66_reg_2960(0) = '1') else 
        ap_const_lv8_81;
    storemerge_64_fu_2133_p3 <= 
        ap_const_lv8_7F when (tmp_67_reg_2965(0) = '1') else 
        ap_const_lv8_81;
    storemerge_65_fu_2140_p3 <= 
        ap_const_lv8_7F when (tmp_68_reg_2970(0) = '1') else 
        ap_const_lv8_81;
    storemerge_66_fu_2147_p3 <= 
        ap_const_lv8_7F when (tmp_69_reg_2975(0) = '1') else 
        ap_const_lv8_81;
    storemerge_67_fu_2154_p3 <= 
        ap_const_lv8_7F when (tmp_70_reg_2980(0) = '1') else 
        ap_const_lv8_81;
    storemerge_68_fu_2161_p3 <= 
        ap_const_lv8_7F when (tmp_71_reg_2985(0) = '1') else 
        ap_const_lv8_81;
    storemerge_69_fu_2168_p3 <= 
        ap_const_lv8_7F when (tmp_72_reg_2990(0) = '1') else 
        ap_const_lv8_81;
    storemerge_6_fu_418_p3 <= 
        ap_const_lv8_7F when (tmp_7_fu_410_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_70_fu_2175_p3 <= 
        ap_const_lv8_7F when (tmp_73_reg_2995(0) = '1') else 
        ap_const_lv8_81;
    storemerge_71_fu_2182_p3 <= 
        ap_const_lv8_7F when (tmp_74_reg_3000(0) = '1') else 
        ap_const_lv8_81;
    storemerge_72_fu_2189_p3 <= 
        ap_const_lv8_7F when (tmp_75_reg_3005(0) = '1') else 
        ap_const_lv8_81;
    storemerge_73_fu_2196_p3 <= 
        ap_const_lv8_7F when (tmp_76_reg_3010(0) = '1') else 
        ap_const_lv8_81;
    storemerge_74_fu_2203_p3 <= 
        ap_const_lv8_7F when (tmp_77_reg_3015(0) = '1') else 
        ap_const_lv8_81;
    storemerge_75_fu_2210_p3 <= 
        ap_const_lv8_7F when (tmp_78_reg_3020(0) = '1') else 
        ap_const_lv8_81;
    storemerge_76_fu_2217_p3 <= 
        ap_const_lv8_7F when (tmp_79_reg_3025(0) = '1') else 
        ap_const_lv8_81;
    storemerge_77_fu_2224_p3 <= 
        ap_const_lv8_7F when (tmp_80_reg_3030(0) = '1') else 
        ap_const_lv8_81;
    storemerge_78_fu_2268_p3 <= 
        ap_const_lv8_7F when (tmp_81_reg_3035(0) = '1') else 
        ap_const_lv8_81;
    storemerge_79_fu_2275_p3 <= 
        ap_const_lv8_7F when (tmp_82_reg_3040(0) = '1') else 
        ap_const_lv8_81;
    storemerge_7_fu_498_p3 <= 
        ap_const_lv8_7F when (tmp_12_fu_490_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_80_fu_2282_p3 <= 
        ap_const_lv8_7F when (tmp_83_reg_3045(0) = '1') else 
        ap_const_lv8_81;
    storemerge_81_fu_2289_p3 <= 
        ap_const_lv8_7F when (tmp_84_reg_3050(0) = '1') else 
        ap_const_lv8_81;
    storemerge_82_fu_2296_p3 <= 
        ap_const_lv8_7F when (tmp_85_reg_3055(0) = '1') else 
        ap_const_lv8_81;
    storemerge_83_fu_2303_p3 <= 
        ap_const_lv8_7F when (tmp_86_reg_3060(0) = '1') else 
        ap_const_lv8_81;
    storemerge_84_fu_2310_p3 <= 
        ap_const_lv8_7F when (tmp_87_reg_3065(0) = '1') else 
        ap_const_lv8_81;
    storemerge_85_fu_2317_p3 <= 
        ap_const_lv8_7F when (tmp_88_reg_3070(0) = '1') else 
        ap_const_lv8_81;
    storemerge_86_fu_2324_p3 <= 
        ap_const_lv8_7F when (tmp_89_reg_3075(0) = '1') else 
        ap_const_lv8_81;
    storemerge_87_fu_2331_p3 <= 
        ap_const_lv8_7F when (tmp_90_reg_3080(0) = '1') else 
        ap_const_lv8_81;
    storemerge_88_fu_2338_p3 <= 
        ap_const_lv8_7F when (tmp_91_reg_3085(0) = '1') else 
        ap_const_lv8_81;
    storemerge_89_fu_2345_p3 <= 
        ap_const_lv8_7F when (tmp_92_reg_3090(0) = '1') else 
        ap_const_lv8_81;
    storemerge_8_fu_450_p3 <= 
        ap_const_lv8_7F when (tmp_9_fu_442_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_90_fu_2352_p3 <= 
        ap_const_lv8_7F when (tmp_93_reg_3095(0) = '1') else 
        ap_const_lv8_81;
    storemerge_91_fu_2359_p3 <= 
        ap_const_lv8_7F when (tmp_94_reg_3100(0) = '1') else 
        ap_const_lv8_81;
    storemerge_92_fu_2366_p3 <= 
        ap_const_lv8_7F when (tmp_95_reg_3105(0) = '1') else 
        ap_const_lv8_81;
    storemerge_93_fu_2373_p3 <= 
        ap_const_lv8_7F when (tmp_96_reg_3110(0) = '1') else 
        ap_const_lv8_81;
    storemerge_94_fu_2417_p3 <= 
        ap_const_lv8_7F when (tmp_97_reg_3115(0) = '1') else 
        ap_const_lv8_81;
    storemerge_95_fu_2424_p3 <= 
        ap_const_lv8_7F when (tmp_98_reg_3120(0) = '1') else 
        ap_const_lv8_81;
    storemerge_96_fu_2431_p3 <= 
        ap_const_lv8_7F when (tmp_99_reg_3125(0) = '1') else 
        ap_const_lv8_81;
    storemerge_97_fu_2438_p3 <= 
        ap_const_lv8_7F when (tmp_100_reg_3130(0) = '1') else 
        ap_const_lv8_81;
    storemerge_98_fu_2445_p3 <= 
        ap_const_lv8_7F when (tmp_101_reg_3135(0) = '1') else 
        ap_const_lv8_81;
    storemerge_99_fu_2452_p3 <= 
        ap_const_lv8_7F when (tmp_102_reg_3140(0) = '1') else 
        ap_const_lv8_81;
    storemerge_9_fu_466_p3 <= 
        ap_const_lv8_7F when (tmp_10_fu_458_p3(0) = '1') else 
        ap_const_lv8_81;
    storemerge_fu_322_p3 <= 
        ap_const_lv8_7F when (tmp_fu_318_p1(0) = '1') else 
        ap_const_lv8_81;
    storemerge_s_fu_482_p3 <= 
        ap_const_lv8_7F when (tmp_11_fu_474_p3(0) = '1') else 
        ap_const_lv8_81;
    tmp_10_fu_458_p3 <= mod_data_V_data_V_0_data_out(9 downto 9);
    tmp_11_fu_474_p3 <= mod_data_V_data_V_0_data_out(10 downto 10);
    tmp_12_fu_490_p3 <= mod_data_V_data_V_0_data_out(11 downto 11);
    tmp_13_fu_506_p3 <= mod_data_V_data_V_0_data_out(12 downto 12);
    tmp_14_fu_522_p3 <= mod_data_V_data_V_0_data_out(13 downto 13);
    tmp_15_fu_538_p3 <= mod_data_V_data_V_0_data_out(14 downto 14);
    tmp_16_fu_554_p3 <= mod_data_V_data_V_0_data_out(15 downto 15);
    tmp_1_fu_330_p3 <= mod_data_V_data_V_0_data_out(1 downto 1);
    tmp_2_fu_434_p3 <= 
        ap_const_lv8_7F when (tmp_8_fu_426_p3(0) = '1') else 
        ap_const_lv8_81;
    tmp_38_1_fu_1540_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_1_fu_1528_p2(0) = '1') else 
        tmp_38_op_fu_1534_p2;
    tmp_38_1_op_fu_1554_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_1_fu_1540_p3));
    tmp_38_2_fu_1709_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_2_reg_3290(0) = '1') else 
        tmp_38_1_op_reg_3296;
    tmp_38_2_op_fu_1721_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_2_fu_1709_p3));
    tmp_38_3_fu_1727_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_3_fu_1715_p2(0) = '1') else 
        tmp_38_2_op_fu_1721_p2;
    tmp_38_3_op_fu_1741_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_3_fu_1727_p3));
    tmp_38_4_fu_1747_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_4_fu_1735_p2(0) = '1') else 
        tmp_38_3_op_fu_1741_p2;
    tmp_38_4_op_fu_1761_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_4_fu_1747_p3));
    tmp_38_5_fu_1767_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_5_fu_1755_p2(0) = '1') else 
        tmp_38_4_op_fu_1761_p2;
    tmp_38_5_op_fu_1781_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_5_fu_1767_p3));
    tmp_38_6_fu_1787_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_6_fu_1775_p2(0) = '1') else 
        tmp_38_5_op_fu_1781_p2;
    tmp_38_6_op_fu_1801_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_38_6_fu_1787_p3));
    tmp_38_7_fu_1807_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_7_fu_1795_p2(0) = '1') else 
        tmp_38_6_op_fu_1801_p2;
    tmp_38_op_fu_1534_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(tmp_s_fu_1520_p3));
    tmp_3_fu_346_p3 <= mod_data_V_data_V_0_data_out(2 downto 2);
    tmp_4_fu_362_p3 <= mod_data_V_data_V_0_data_out(3 downto 3);
    tmp_5_fu_378_p3 <= mod_data_V_data_V_0_data_out(4 downto 4);
    tmp_6_fu_394_p3 <= mod_data_V_data_V_0_data_out(5 downto 5);
    tmp_7_fu_410_p3 <= mod_data_V_data_V_0_data_out(6 downto 6);
    tmp_8_fu_426_p3 <= mod_data_V_data_V_0_data_out(7 downto 7);
    tmp_9_fu_442_p3 <= mod_data_V_data_V_0_data_out(8 downto 8);
    tmp_data_V_1_fu_1672_p17 <= (((((((((((((((storemerge_29_fu_1665_p3 & storemerge_28_fu_1658_p3) & storemerge_27_fu_1651_p3) & storemerge_26_fu_1644_p3) & storemerge_25_fu_1637_p3) & storemerge_24_fu_1630_p3) & storemerge_23_fu_1623_p3) & storemerge_22_fu_1616_p3) & storemerge_21_fu_1609_p3) & storemerge_20_fu_1602_p3) & storemerge_19_fu_1595_p3) & storemerge_18_fu_1588_p3) & storemerge_17_fu_1581_p3) & storemerge_16_fu_1574_p3) & storemerge_15_fu_1567_p3) & storemerge_14_fu_1560_p3);
    tmp_data_V_2_fu_1933_p17 <= (((((((((((((((storemerge_45_fu_1926_p3 & storemerge_44_fu_1919_p3) & storemerge_43_fu_1912_p3) & storemerge_42_fu_1905_p3) & storemerge_41_fu_1898_p3) & storemerge_40_fu_1891_p3) & storemerge_39_fu_1884_p3) & storemerge_38_fu_1877_p3) & storemerge_37_fu_1870_p3) & storemerge_36_fu_1863_p3) & storemerge_35_fu_1856_p3) & storemerge_34_fu_1849_p3) & storemerge_33_fu_1842_p3) & storemerge_32_fu_1835_p3) & storemerge_31_fu_1828_p3) & storemerge_30_fu_1821_p3);
    tmp_data_V_3_fu_2082_p17 <= (((((((((((((((storemerge_61_fu_2075_p3 & storemerge_60_fu_2068_p3) & storemerge_59_fu_2061_p3) & storemerge_58_fu_2054_p3) & storemerge_57_fu_2047_p3) & storemerge_56_fu_2040_p3) & storemerge_55_fu_2033_p3) & storemerge_54_fu_2026_p3) & storemerge_53_fu_2019_p3) & storemerge_52_fu_2012_p3) & storemerge_51_fu_2005_p3) & storemerge_50_fu_1998_p3) & storemerge_49_fu_1991_p3) & storemerge_48_fu_1984_p3) & storemerge_47_fu_1977_p3) & storemerge_46_fu_1970_p3);
    tmp_data_V_4_fu_2231_p17 <= (((((((((((((((storemerge_77_fu_2224_p3 & storemerge_76_fu_2217_p3) & storemerge_75_fu_2210_p3) & storemerge_74_fu_2203_p3) & storemerge_73_fu_2196_p3) & storemerge_72_fu_2189_p3) & storemerge_71_fu_2182_p3) & storemerge_70_fu_2175_p3) & storemerge_69_fu_2168_p3) & storemerge_68_fu_2161_p3) & storemerge_67_fu_2154_p3) & storemerge_66_fu_2147_p3) & storemerge_65_fu_2140_p3) & storemerge_64_fu_2133_p3) & storemerge_63_fu_2126_p3) & storemerge_62_fu_2119_p3);
    tmp_data_V_5_fu_2380_p17 <= (((((((((((((((storemerge_93_fu_2373_p3 & storemerge_92_fu_2366_p3) & storemerge_91_fu_2359_p3) & storemerge_90_fu_2352_p3) & storemerge_89_fu_2345_p3) & storemerge_88_fu_2338_p3) & storemerge_87_fu_2331_p3) & storemerge_86_fu_2324_p3) & storemerge_85_fu_2317_p3) & storemerge_84_fu_2310_p3) & storemerge_83_fu_2303_p3) & storemerge_82_fu_2296_p3) & storemerge_81_fu_2289_p3) & storemerge_80_fu_2282_p3) & storemerge_79_fu_2275_p3) & storemerge_78_fu_2268_p3);
    tmp_data_V_6_fu_2529_p17 <= (((((((((((((((storemerge_109_fu_2522_p3 & storemerge_108_fu_2515_p3) & storemerge_107_fu_2508_p3) & storemerge_106_fu_2501_p3) & storemerge_105_fu_2494_p3) & storemerge_104_fu_2487_p3) & storemerge_103_fu_2480_p3) & storemerge_102_fu_2473_p3) & storemerge_101_fu_2466_p3) & storemerge_100_fu_2459_p3) & storemerge_99_fu_2452_p3) & storemerge_98_fu_2445_p3) & storemerge_97_fu_2438_p3) & storemerge_96_fu_2431_p3) & storemerge_95_fu_2424_p3) & storemerge_94_fu_2417_p3);
    tmp_data_V_7_fu_2678_p17 <= (((((((((((((((storemerge_125_fu_2671_p3 & storemerge_124_fu_2664_p3) & storemerge_123_fu_2657_p3) & storemerge_122_fu_2650_p3) & storemerge_121_fu_2643_p3) & storemerge_120_fu_2636_p3) & storemerge_119_fu_2629_p3) & storemerge_118_fu_2622_p3) & storemerge_117_fu_2615_p3) & storemerge_116_fu_2608_p3) & storemerge_115_fu_2601_p3) & storemerge_114_fu_2594_p3) & storemerge_113_fu_2587_p3) & storemerge_112_fu_2580_p3) & storemerge_111_fu_2573_p3) & storemerge_110_fu_2566_p3);
    tmp_data_V_fu_1466_p17 <= (((((((((((((((storemerge_13_fu_562_p3 & storemerge_12_fu_546_p3) & storemerge_11_fu_530_p3) & storemerge_10_fu_514_p3) & storemerge_7_fu_498_p3) & storemerge_s_fu_482_p3) & storemerge_9_fu_466_p3) & storemerge_8_fu_450_p3) & tmp_2_fu_434_p3) & storemerge_6_fu_418_p3) & storemerge_5_fu_402_p3) & storemerge_4_fu_386_p3) & storemerge_3_fu_370_p3) & storemerge_2_fu_354_p3) & storemerge_1_fu_338_p3) & storemerge_fu_322_p3);
    tmp_fu_318_p1 <= mod_data_V_data_V_0_data_out(1 - 1 downto 0);
    tmp_last_V_1_fu_1528_p2 <= "1" when (tmp_s_fu_1520_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_2_fu_1548_p2 <= "1" when (tmp_38_1_fu_1540_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_3_fu_1715_p2 <= "1" when (tmp_38_2_fu_1709_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_4_fu_1735_p2 <= "1" when (tmp_38_3_fu_1727_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_5_fu_1755_p2 <= "1" when (tmp_38_4_fu_1747_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_6_fu_1775_p2 <= "1" when (tmp_38_5_fu_1767_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_7_fu_1795_p2 <= "1" when (tmp_38_6_fu_1787_p3 = ap_const_lv32_38) else "0";
    tmp_last_V_fu_1507_p2 <= "1" when (demod_axi_trx = ap_const_lv32_38) else "0";
    tmp_s_fu_1520_p3 <= 
        ap_const_lv32_1 when (tmp_last_V_fu_1507_p2(0) = '1') else 
        demod_axi_trx_load_o_fu_1514_p2;
end behav;
