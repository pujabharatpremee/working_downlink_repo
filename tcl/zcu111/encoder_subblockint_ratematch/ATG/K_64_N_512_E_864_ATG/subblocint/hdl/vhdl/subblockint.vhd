-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subblockint is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ITLVdataOut_TREADY : IN STD_LOGIC;
    ITLVdataIn_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    ITLVdataIn_TVALID : IN STD_LOGIC;
    ITLVdataIn_TREADY : OUT STD_LOGIC;
    ITLVdataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    ITLVdataOut_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    ITLVdataOut_TVALID : OUT STD_LOGIC;
    ITLVdataOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of subblockint is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "subblockint,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu21dr-ffvd1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=5,HLS_SYN_TPT=4,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=870,HLS_SYN_LUT=246,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ITLVdataIn_V_data_V_0_vld_out : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ITLVdataOut_V_data_V_1_ack_in : STD_LOGIC;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ITLVdataIn_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataIn_V_data_V_0_vld_in : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_ack_in : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_ack_out : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataIn_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataIn_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal ITLVdataIn_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal ITLVdataIn_V_data_V_0_sel : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_load_A : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_load_B : STD_LOGIC;
    signal ITLVdataIn_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ITLVdataIn_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal ITLVdataIn_V_last_V_0_vld_in : STD_LOGIC;
    signal ITLVdataIn_V_last_V_0_ack_out : STD_LOGIC;
    signal ITLVdataIn_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ITLVdataOut_V_data_V_1_data_in : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataOut_V_data_V_1_vld_in : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_vld_out : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_ack_out : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal ITLVdataOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal ITLVdataOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal ITLVdataOut_V_data_V_1_sel : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_load_A : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_load_B : STD_LOGIC;
    signal ITLVdataOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ITLVdataOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal ITLVdataOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal ITLVdataOut_V_last_V_1_vld_in : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_vld_out : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_ack_in : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_ack_out : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal ITLVdataOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal ITLVdataOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal ITLVdataOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal ITLVdataOut_V_last_V_1_sel : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_load_A : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_load_B : STD_LOGIC;
    signal ITLVdataOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ITLVdataOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal ITLVdataIn_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ITLVdataOut_TDATA_blk_n : STD_LOGIC;
    signal reg_178 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_108_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_182 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_186 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_190_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_3_reg_262 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_data_V_2_fu_194_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_128_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_138_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_277 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_206_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_282 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_287 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_297 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_3_fu_214_p9 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_s_reg_307 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_317 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_reg_322 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_fu_232_p9 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_22_fu_246_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_22_reg_332 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_data_V_5_fu_250_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_10_fu_210_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ITLVdataIn_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataIn_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataIn_V_data_V_0_ack_out) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_vld_out))) then 
                                        ITLVdataIn_V_data_V_0_sel_rd <= not(ITLVdataIn_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataIn_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataIn_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataIn_V_data_V_0_ack_in) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_vld_in))) then 
                                        ITLVdataIn_V_data_V_0_sel_wr <= not(ITLVdataIn_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataIn_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataIn_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_in)) or ((ap_const_lv2_3 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_in) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_ack_out)))) then 
                    ITLVdataIn_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_data_V_0_ack_out)) or ((ap_const_lv2_3 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_data_V_0_ack_out) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_vld_in)))) then 
                    ITLVdataIn_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_in) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = ITLVdataIn_V_data_V_0_ack_out) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_vld_in))) and (ap_const_lv2_3 = ITLVdataIn_V_data_V_0_state)) or ((ap_const_lv2_1 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_ack_out)) or ((ap_const_lv2_2 = ITLVdataIn_V_data_V_0_state) and (ap_const_logic_1 = ITLVdataIn_V_data_V_0_vld_in)))) then 
                    ITLVdataIn_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    ITLVdataIn_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ITLVdataIn_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataIn_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_last_V_0_vld_in)) or ((ap_const_lv2_3 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_last_V_0_vld_in) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_ack_out)))) then 
                    ITLVdataIn_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_last_V_0_ack_out)) or ((ap_const_lv2_3 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_0 = ITLVdataIn_V_last_V_0_ack_out) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_vld_in)))) then 
                    ITLVdataIn_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = ITLVdataIn_V_last_V_0_vld_in) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = ITLVdataIn_V_last_V_0_ack_out) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_vld_in))) and (ap_const_lv2_3 = ITLVdataIn_V_last_V_0_state)) or ((ap_const_lv2_1 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_ack_out)) or ((ap_const_lv2_2 = ITLVdataIn_V_last_V_0_state) and (ap_const_logic_1 = ITLVdataIn_V_last_V_0_vld_in)))) then 
                    ITLVdataIn_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    ITLVdataIn_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataOut_V_data_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_vld_out))) then 
                                        ITLVdataOut_V_data_V_1_sel_rd <= not(ITLVdataOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataOut_V_data_V_1_ack_in) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_vld_in))) then 
                                        ITLVdataOut_V_data_V_1_sel_wr <= not(ITLVdataOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_data_V_1_vld_in)) or ((ap_const_lv2_3 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_data_V_1_vld_in) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_ack_out)))) then 
                    ITLVdataOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_out)) or ((ap_const_lv2_3 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_vld_in)))) then 
                    ITLVdataOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = ITLVdataOut_V_data_V_1_vld_in) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_vld_in))) and (ap_const_lv2_3 = ITLVdataOut_V_data_V_1_state)) or ((ap_const_lv2_1 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_ack_out)) or ((ap_const_lv2_2 = ITLVdataOut_V_data_V_1_state) and (ap_const_logic_1 = ITLVdataOut_V_data_V_1_vld_in)))) then 
                    ITLVdataOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    ITLVdataOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataOut_V_last_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_vld_out))) then 
                                        ITLVdataOut_V_last_V_1_sel_rd <= not(ITLVdataOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ITLVdataOut_V_last_V_1_ack_in) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_vld_in))) then 
                                        ITLVdataOut_V_last_V_1_sel_wr <= not(ITLVdataOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    ITLVdataOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ITLVdataOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_last_V_1_vld_in)) or ((ap_const_lv2_3 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_last_V_1_vld_in) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_ack_out)))) then 
                    ITLVdataOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_out)) or ((ap_const_lv2_3 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_vld_in)))) then 
                    ITLVdataOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = ITLVdataOut_V_last_V_1_vld_in) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_out) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_vld_in))) and (ap_const_lv2_3 = ITLVdataOut_V_last_V_1_state)) or ((ap_const_lv2_1 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_ack_out)) or ((ap_const_lv2_2 = ITLVdataOut_V_last_V_1_state) and (ap_const_logic_1 = ITLVdataOut_V_last_V_1_vld_in)))) then 
                    ITLVdataOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    ITLVdataOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataIn_V_data_V_0_load_A)) then
                ITLVdataIn_V_data_V_0_payload_A <= ITLVdataIn_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataIn_V_data_V_0_load_B)) then
                ITLVdataIn_V_data_V_0_payload_B <= ITLVdataIn_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataOut_V_data_V_1_load_A)) then
                ITLVdataOut_V_data_V_1_payload_A <= ITLVdataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataOut_V_data_V_1_load_B)) then
                ITLVdataOut_V_data_V_1_payload_B <= ITLVdataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataOut_V_last_V_1_load_A)) then
                ITLVdataOut_V_last_V_1_payload_A <= ITLVdataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ITLVdataOut_V_last_V_1_load_B)) then
                ITLVdataOut_V_last_V_1_payload_B <= ITLVdataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_178 <= ITLVdataIn_V_data_V_0_data_out(127 downto 80);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_182 <= ITLVdataIn_V_data_V_0_data_out(63 downto 48);
                reg_186 <= ITLVdataIn_V_data_V_0_data_out(79 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_11_reg_282 <= tmp_11_fu_206_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_12_reg_287 <= ITLVdataIn_V_data_V_0_data_out(127 downto 112);
                tmp_14_reg_292 <= ITLVdataIn_V_data_V_0_data_out(111 downto 96);
                tmp_16_reg_297 <= ITLVdataIn_V_data_V_0_data_out(95 downto 80);
                tmp_7_reg_272 <= ITLVdataIn_V_data_V_0_data_out(47 downto 32);
                tmp_9_reg_277 <= ITLVdataIn_V_data_V_0_data_out(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_13_reg_312 <= ITLVdataIn_V_data_V_0_data_out(111 downto 96);
                tmp_15_reg_317 <= ITLVdataIn_V_data_V_0_data_out(95 downto 80);
                tmp_17_reg_322 <= ITLVdataIn_V_data_V_0_data_out(79 downto 64);
                tmp_s_reg_307 <= ITLVdataIn_V_data_V_0_data_out(127 downto 112);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_22_reg_332 <= tmp_22_fu_246_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_3_reg_262 <= tmp_3_fu_190_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ITLVdataIn_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ITLVdataIn_V_data_V_0_state, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1)))) then 
            ITLVdataIn_TDATA_blk_n <= ITLVdataIn_V_data_V_0_state(0);
        else 
            ITLVdataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ITLVdataIn_TREADY <= ITLVdataIn_V_last_V_0_state(1);
    ITLVdataIn_V_data_V_0_ack_in <= ITLVdataIn_V_data_V_0_state(1);

    ITLVdataIn_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ITLVdataIn_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            ITLVdataIn_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    ITLVdataIn_V_data_V_0_data_out_assign_proc : process(ITLVdataIn_V_data_V_0_payload_A, ITLVdataIn_V_data_V_0_payload_B, ITLVdataIn_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = ITLVdataIn_V_data_V_0_sel)) then 
            ITLVdataIn_V_data_V_0_data_out <= ITLVdataIn_V_data_V_0_payload_B;
        else 
            ITLVdataIn_V_data_V_0_data_out <= ITLVdataIn_V_data_V_0_payload_A;
        end if; 
    end process;

    ITLVdataIn_V_data_V_0_load_A <= (not(ITLVdataIn_V_data_V_0_sel_wr) and ITLVdataIn_V_data_V_0_state_cmp_full);
    ITLVdataIn_V_data_V_0_load_B <= (ITLVdataIn_V_data_V_0_state_cmp_full and ITLVdataIn_V_data_V_0_sel_wr);
    ITLVdataIn_V_data_V_0_sel <= ITLVdataIn_V_data_V_0_sel_rd;
    ITLVdataIn_V_data_V_0_state_cmp_full <= '0' when (ITLVdataIn_V_data_V_0_state = ap_const_lv2_1) else '1';
    ITLVdataIn_V_data_V_0_vld_in <= ITLVdataIn_TVALID;
    ITLVdataIn_V_data_V_0_vld_out <= ITLVdataIn_V_data_V_0_state(0);

    ITLVdataIn_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ITLVdataIn_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            ITLVdataIn_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    ITLVdataIn_V_last_V_0_vld_in <= ITLVdataIn_TVALID;
    ITLVdataOut_TDATA <= ITLVdataOut_V_data_V_1_data_out;

    ITLVdataOut_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ITLVdataOut_V_data_V_1_state, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ITLVdataOut_TDATA_blk_n <= ITLVdataOut_V_data_V_1_state(1);
        else 
            ITLVdataOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ITLVdataOut_TLAST <= ITLVdataOut_V_last_V_1_data_out;
    ITLVdataOut_TVALID <= ITLVdataOut_V_last_V_1_state(0);
    ITLVdataOut_V_data_V_1_ack_in <= ITLVdataOut_V_data_V_1_state(1);
    ITLVdataOut_V_data_V_1_ack_out <= ITLVdataOut_TREADY;

    ITLVdataOut_V_data_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_data_V_2_fu_194_p5, tmp_data_V_3_fu_214_p9, tmp_data_V_4_fu_232_p9, tmp_data_V_5_fu_250_p5, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ITLVdataOut_V_data_V_1_data_in <= tmp_data_V_5_fu_250_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ITLVdataOut_V_data_V_1_data_in <= tmp_data_V_4_fu_232_p9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ITLVdataOut_V_data_V_1_data_in <= tmp_data_V_3_fu_214_p9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ITLVdataOut_V_data_V_1_data_in <= tmp_data_V_2_fu_194_p5;
        else 
            ITLVdataOut_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ITLVdataOut_V_data_V_1_data_out_assign_proc : process(ITLVdataOut_V_data_V_1_payload_A, ITLVdataOut_V_data_V_1_payload_B, ITLVdataOut_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = ITLVdataOut_V_data_V_1_sel)) then 
            ITLVdataOut_V_data_V_1_data_out <= ITLVdataOut_V_data_V_1_payload_B;
        else 
            ITLVdataOut_V_data_V_1_data_out <= ITLVdataOut_V_data_V_1_payload_A;
        end if; 
    end process;

    ITLVdataOut_V_data_V_1_load_A <= (not(ITLVdataOut_V_data_V_1_sel_wr) and ITLVdataOut_V_data_V_1_state_cmp_full);
    ITLVdataOut_V_data_V_1_load_B <= (ITLVdataOut_V_data_V_1_state_cmp_full and ITLVdataOut_V_data_V_1_sel_wr);
    ITLVdataOut_V_data_V_1_sel <= ITLVdataOut_V_data_V_1_sel_rd;
    ITLVdataOut_V_data_V_1_state_cmp_full <= '0' when (ITLVdataOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    ITLVdataOut_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ITLVdataOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            ITLVdataOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ITLVdataOut_V_data_V_1_vld_out <= ITLVdataOut_V_data_V_1_state(0);
    ITLVdataOut_V_last_V_1_ack_in <= ITLVdataOut_V_last_V_1_state(1);
    ITLVdataOut_V_last_V_1_ack_out <= ITLVdataOut_TREADY;

    ITLVdataOut_V_last_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ITLVdataOut_V_last_V_1_data_in <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            ITLVdataOut_V_last_V_1_data_in <= ap_const_lv1_0;
        else 
            ITLVdataOut_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    ITLVdataOut_V_last_V_1_data_out_assign_proc : process(ITLVdataOut_V_last_V_1_payload_A, ITLVdataOut_V_last_V_1_payload_B, ITLVdataOut_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = ITLVdataOut_V_last_V_1_sel)) then 
            ITLVdataOut_V_last_V_1_data_out <= ITLVdataOut_V_last_V_1_payload_B;
        else 
            ITLVdataOut_V_last_V_1_data_out <= ITLVdataOut_V_last_V_1_payload_A;
        end if; 
    end process;

    ITLVdataOut_V_last_V_1_load_A <= (not(ITLVdataOut_V_last_V_1_sel_wr) and ITLVdataOut_V_last_V_1_state_cmp_full);
    ITLVdataOut_V_last_V_1_load_B <= (ITLVdataOut_V_last_V_1_state_cmp_full and ITLVdataOut_V_last_V_1_sel_wr);
    ITLVdataOut_V_last_V_1_sel <= ITLVdataOut_V_last_V_1_sel_rd;
    ITLVdataOut_V_last_V_1_state_cmp_full <= '0' when (ITLVdataOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    ITLVdataOut_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ITLVdataOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            ITLVdataOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ITLVdataOut_V_last_V_1_vld_out <= ITLVdataOut_V_last_V_1_state(0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) or (ap_start = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) or (ap_start = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in, ITLVdataOut_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_in))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in, ITLVdataOut_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_in))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in, ITLVdataOut_V_last_V_1_ack_in)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_in))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ITLVdataIn_V_data_V_0_vld_out, ITLVdataOut_V_data_V_1_ack_in)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out);
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out);
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(ITLVdataIn_V_data_V_0_vld_out)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (ap_const_logic_0 = ITLVdataIn_V_data_V_0_vld_out);
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage1_iter1_assign_proc : process(ITLVdataOut_V_data_V_1_ack_in, ITLVdataOut_V_last_V_1_ack_in)
    begin
                ap_block_state6_pp0_stage1_iter1 <= ((ap_const_logic_0 = ITLVdataOut_V_data_V_1_ack_in) or (ap_const_logic_0 = ITLVdataOut_V_last_V_1_ack_in));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_fu_108_p4 <= ITLVdataIn_V_data_V_0_data_out(63 downto 48);
    grp_fu_128_p4 <= ITLVdataIn_V_data_V_0_data_out(47 downto 32);
    grp_fu_138_p4 <= ITLVdataIn_V_data_V_0_data_out(31 downto 16);
    tmp_10_fu_210_p1 <= ITLVdataIn_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_11_fu_206_p1 <= ITLVdataIn_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_22_fu_246_p1 <= ITLVdataIn_V_data_V_0_data_out(48 - 1 downto 0);
    tmp_3_fu_190_p1 <= ITLVdataIn_V_data_V_0_data_out(48 - 1 downto 0);
    tmp_data_V_2_fu_194_p5 <= (((reg_178 & reg_182) & reg_186) & tmp_3_reg_262);
    tmp_data_V_3_fu_214_p9 <= (((((((grp_fu_108_p4 & reg_182) & grp_fu_128_p4) & tmp_7_reg_272) & grp_fu_138_p4) & tmp_9_reg_277) & tmp_10_fu_210_p1) & tmp_11_reg_282);
    tmp_data_V_4_fu_232_p9 <= (((((((tmp_s_reg_307 & tmp_12_reg_287) & tmp_13_reg_312) & tmp_14_reg_292) & tmp_15_reg_317) & tmp_16_reg_297) & tmp_17_reg_322) & reg_186);
    tmp_data_V_5_fu_250_p5 <= (((reg_178 & reg_182) & reg_186) & tmp_22_reg_332);
end behav;
